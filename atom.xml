<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>智汇云立方</title>
  
  
  <link href="https://lxttz.github.io/atom.xml" rel="self"/>
  
  <link href="https://lxttz.github.io/"/>
  <updated>2025-04-07T10:46:11.079Z</updated>
  <id>https://lxttz.github.io/</id>
  
  <author>
    <name>智汇云立方官网🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://lxttz.github.io/posts/0.html"/>
    <id>https://lxttz.github.io/posts/0.html</id>
    <published>2025-04-11T06:27:13.175Z</published>
    <updated>2025-04-07T10:46:11.079Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🌱 SpringBoot + Vue 全栈开发指南</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🏗️ 一、技术架构概览</span></span><br><span class="line"><span class="section">### 后端技术栈 (SpringBoot)</span></span><br><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TD</span></span><br><span class="line"><span class="code">    A[SpringBoot] --&gt; B[Spring MVC]</span></span><br><span class="line"><span class="code">    A --&gt; C[Spring Security]</span></span><br><span class="line"><span class="code">    A --&gt; D[MyBatis/MyBatis-Plus]</span></span><br><span class="line"><span class="code">    A --&gt; E[Spring Data JPA]</span></span><br><span class="line"><span class="code">    F[MySQL/PostgreSQL] --&gt; D</span></span><br><span class="line"><span class="code">    G[Redis] --&gt; C</span></span><br></pre></td></tr></table></figure><h3 id="前端技术栈-Vue">前端技术栈 (Vue)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Vue3] --&gt; B[Vue Router]</span><br><span class="line">    A --&gt; C[Pinia/Vuex]</span><br><span class="line">    A --&gt; D[Axios]</span><br><span class="line">    A --&gt; E[Element Plus/Ant Design Vue]</span><br><span class="line">    A --&gt; F[Vite]</span><br></pre></td></tr></table></figure><h2 id="📚-二、完整学习路径">📚 二、完整学习路径</h2><h3 id="1-基础阶段（2-4周）">1. 基础阶段（2-4周）</h3><h4 id="后端基础">后端基础</h4><ul><li>✅ SpringBoot核心特性<ul><li>自动配置原理</li><li>Starter机制</li><li>Actuator监控</li></ul></li><li>✅ RESTful API设计<ul><li>常用注解：@RestController, @RequestMapping</li><li>统一响应封装</li><li>全局异常处理</li></ul></li></ul><h4 id="前端基础">前端基础</h4><ul><li>🖥️ Vue3核心语法<ul><li>Composition API</li><li>响应式原理(ref/reactive)</li><li>组件通信</li></ul></li><li>🌐 Vue Router 4.x<ul><li>动态路由</li><li>导航守卫</li><li>路由懒加载</li></ul></li></ul><h3 id="2-进阶阶段（3-5周）">2. 进阶阶段（3-5周）</h3><h4 id="后端进阶">后端进阶</h4><ul><li>🛡️ 安全控制<ul><li>JWT实现</li><li>Spring Security配置</li><li>权限注解(@PreAuthorize)</li></ul></li><li>🔄 数据持久化<ul><li>MyBatis动态SQL</li><li>多数据源配置</li><li>事务管理</li></ul></li></ul><h4 id="前端进阶">前端进阶</h4><ul><li>🏪 状态管理<ul><li>Pinia基础</li><li>模块化设计</li><li>持久化存储</li></ul></li><li>📡 网络请求<ul><li>Axios封装</li><li>请求拦截器</li><li>错误统一处理</li></ul></li></ul><h2 id="🚀-三、项目快速搭建指南">🚀 三、项目快速搭建指南</h2><h3 id="1-环境准备">1. 环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端环境</span></span><br><span class="line">JDK 17+</span><br><span class="line">Maven 3.8+</span><br><span class="line">MySQL 8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端环境</span></span><br><span class="line">Node.js 16+</span><br><span class="line">npm/yarn/pnpm</span><br></pre></td></tr></table></figure><h3 id="2-项目初始化">2. 项目初始化</h3><h4 id="后端创建">后端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Spring Initializr</span></span><br><span class="line">https://start.spring.io/</span><br><span class="line"></span><br><span class="line">选择依赖：</span><br><span class="line">- Spring Web</span><br><span class="line">- Lombok</span><br><span class="line">- MyBatis Framework</span><br><span class="line">- MySQL Driver</span><br></pre></td></tr></table></figure><h4 id="前端创建">前端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm install vue-router pinia axios element-plus</span><br></pre></td></tr></table></figure><h3 id="3-关键配置示例">3. 关键配置示例</h3><h4 id="后端配置">后端配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// application.yml</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure><h4 id="前端配置">前端配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="🔧-四、开发实用技巧">🔧 四、开发实用技巧</h2><h3 id="跨域解决方案">跨域解决方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端配置CORS</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理">全局异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">handleException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端API封装">前端API封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="📦-五、部署方案">📦 五、部署方案</h2><h3 id="1-后端打包">1. 后端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br><span class="line">java -jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="2-前端打包">2. 前端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="3-部署架构选择">3. 部署架构选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 传统部署</span><br><span class="line"><span class="bullet">   -</span> Nginx反向代理</span><br><span class="line"><span class="bullet">   -</span> 静态资源部署</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> Docker化部署</span><br><span class="line"><span class="bullet">   -</span> Docker Compose编排</span><br><span class="line"><span class="bullet">   -</span> Nginx容器配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> CI/CD方案</span><br><span class="line"><span class="bullet">   -</span> Jenkins Pipeline</span><br><span class="line"><span class="bullet">   -</span> GitHub Actions</span><br></pre></td></tr></table></figure><h2 id="📝-六、学习资源推荐">📝 六、学习资源推荐</h2><ul><li>书籍：<ul><li>《Spring Boot实战》</li><li>《Vue.js设计与实现》</li></ul></li><li>视频：<ul><li>B站尚硅谷SpringBoot+Vue全栈课程</li></ul></li><li>文档：<ul><li><a href="https://spring.io/projects/spring-boot">Spring官方文档</a></li><li><a href="https://vuejs.org/">Vue官方文档</a></li></ul></li><li>社区：<ul><li>StackOverflow</li><li>GitHub热门开源项目</li></ul></li></ul><h2 id="🚨-常见问题排查">🚨 常见问题排查</h2><ol><li><p>端口冲突：检查8080/3000端口占用</p></li><li><p>数据库连接失败：检查MySQL服务状态和账号权限</p></li><li><p>跨域问题：确保前后端CORS配置正确</p></li><li><p>前端路由404：配置Nginx重定向规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🤖-Assistant&quot;&gt;🤖 Assistant&lt;/h3&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue前后端分离项目如何运行</title>
    <link href="https://lxttz.github.io/posts/b9ef3e19.html"/>
    <id>https://lxttz.github.io/posts/b9ef3e19.html</id>
    <published>2025-04-08T12:34:27.000Z</published>
    <updated>2025-04-08T12:36:02.194Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><h1>🚀 SpringBoot + Vue 前后端分离项目运行指南</h1><p>本文介绍如何运行一个基于 <strong>SpringBoot（后端）</strong> + <strong>Vue（前端）</strong> 的前后端分离项目。</p><hr><h2 id="🔧-运行环境准备">🔧 <strong>运行环境准备</strong></h2><p>在运行项目前，请确保已安装以下环境：</p><table><thead><tr><th>环境</th><th>版本要求</th></tr></thead><tbody><tr><td>JDK</td><td>1.8+</td></tr><tr><td>Maven 或 Gradle</td><td>3.6+</td></tr><tr><td>Node.js</td><td>14.x+</td></tr><tr><td>npm / yarn</td><td>最新版</td></tr></tbody></table><p>🔹 检查安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 JDK</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Maven</span></span><br><span class="line">mvn -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Node.js 和 npm</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><hr><h2 id="⚙-后端（SpringBoot）运行">⚙ <strong>后端（SpringBoot）运行</strong></h2><ol><li><strong>进入后端项目目录</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> springboot-vue-backend</span><br></pre></td></tr></table></figure></li><li><strong>使用 Maven 编译并运行</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install   <span class="comment"># 编译项目</span></span><br><span class="line">mvn spring-boot:run <span class="comment"># 运行项目</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>也可以用 Gradle</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle bootRun</span><br></pre></td></tr></table></figure></blockquote></li><li><strong>验证后端是否启动</strong><br>👉 访问 <code>http://localhost:8080</code> 或 <code>http://localhost:8080/api/test</code>（查看是否有接口返回）</li></ol><hr><h2 id="📦-前端（Vue）运行">📦 <strong>前端（Vue）运行</strong></h2><ol><li><strong>进入前端项目目录</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> vue-frontend</span><br></pre></td></tr></table></figure></li><li><strong>安装依赖（首次运行需要）</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  <span class="comment"># 或 yarn install</span></span><br></pre></td></tr></table></figure></li><li><strong>运行 Vue 项目</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve  <span class="comment"># 或 yarn serve</span></span><br></pre></td></tr></table></figure><blockquote><p>开发模式默认访问 <code>http://localhost:8081</code>（可能需要 <code>--port 8081</code> 避免端口冲突）</p></blockquote></li><li><strong>访问前端页面</strong><br>👉 打开浏览器访问 <code>http://localhost:8081</code></li></ol><hr><h2 id="🔗-前后端联调配置">🔗 <strong>前后端联调配置</strong></h2><ol><li><strong>后端 API 跨域（SpringBoot）</strong><br>在 <code>application.properties</code> 或 <code>@CrossOrigin</code> 注解配置跨域：<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.properties</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br><span class="line"><span class="attr">spring.mvc.cors.allowed-origins</span>=<span class="string">http://localhost:8081</span></span><br></pre></td></tr></table></figure></li><li><strong>前端 API 代理（Vue）</strong><br>在 <code>vue.config.js</code> 中配置后端代理，避免跨域问题：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>, <span class="comment">// 后端地址</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="🏁-运行效果">🏁 <strong>运行效果</strong></h2><p>✅ <strong>后端 API 正常运行</strong>：<br><img src="https://via.placeholder.com/300x200?text=SpringBoot+Running" alt="后端运行"><br>✅ <strong>前端页面访问</strong>：<br><img src="https://via.placeholder.com/300x200?text=Vue+Running" alt="前端运行"></p><hr><h2 id="🔥-常见问题">🔥 <strong>常见问题</strong></h2><table><thead><tr><th>问题</th><th>解决方案</th></tr></thead><tbody><tr><td><code>npm install</code> 报错</td><td>尝试 <code>npm cache clean --force</code> 或 <code>rm -rf node_modules package-lock.json</code></td></tr><tr><td>端口冲突</td><td>修改后端 <code>server.port</code> 或前端 <code>npm run serve --port 8082</code></td></tr><tr><td>跨域请求失败</td><td>确保已正确配置 <code>@CrossOrigin</code> 或 <code>vue.config.js</code> 代理</td></tr></tbody></table><hr><h2 id="📌-总结">📌 <strong>总结</strong></h2><ol><li><strong>后端</strong>：<code>mvn spring-boot:run</code>（SpringBoot）</li><li><strong>前端</strong>：<code>npm run serve</code>（Vue）</li><li><strong>联调</strong>：配置跨域或代理即可前后端通信</li></ol><p>🚀 <strong>运行成功！</strong> 现在你可以开发完整的前后端分离项目了！</p>]]></content>
    
    
    <summary type="html">SpringBoot+Vue前后端分离项目如何运行</summary>
    
    
    
    <category term="springboot" scheme="https://lxttz.github.io/categories/springboot/"/>
    
    <category term="vue" scheme="https://lxttz.github.io/categories/springboot/vue/"/>
    
    <category term="全栈" scheme="https://lxttz.github.io/categories/springboot/vue/%E5%85%A8%E6%A0%88/"/>
    
    
    <category term="SpringBoot+Vue前后端分离项目如何运行" scheme="https://lxttz.github.io/tags/SpringBoot-Vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue前后端分离项目结构</title>
    <link href="https://lxttz.github.io/posts/23a338a7.html"/>
    <id>https://lxttz.github.io/posts/23a338a7.html</id>
    <published>2025-04-08T12:32:26.000Z</published>
    <updated>2025-04-08T12:36:02.197Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🌱 SpringBoot + Vue 前后端分离项目结构</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 📁 项目根目录</span></span><br></pre></td></tr></table></figure><p>project-root/<br>├── backend/          # 🖥️ SpringBoot 后端代码<br>├── frontend/         # 🖌️ Vue 前端代码<br>├── docs/             # 📚 项目文档<br>└── <a href="http://README.md">README.md</a>         # 📋 项目说明文件</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 🖥️ 后端结构 (SpringBoot)</span><br></pre></td></tr></table></figure><p>backend/<br>├── src/<br>│   ├── main/<br>│   │   ├── java/com/example/<br>│   │   │   ├── config/       # ⚙️ 配置类<br>│   │   │   ├── controller/   # 🎮 API接口层<br>│   │   │   ├── service/      # 🔧 业务逻辑层<br>│   │   │   ├── repository/   # 💾 数据访问层<br>│   │   │   ├── model/        # 🧩 数据实体类<br>│   │   │   └── exception/    # ❌ 异常处理<br>│   │   └── resources/<br>│   │       ├── application.yml  # 🛠️ 应用配置<br>│   │       └── static/          # 🏗️ 前端构建后资源（可选）<br>├── target/           # 📦 构建输出目录<br>└── pom.xml           # 🧶 Maven依赖管理</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 🖌️ 前端结构 (Vue <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>frontend/<br>├── public/           # 🏠 静态资源<br>├── src/<br>│   ├── api/          # 📡 接口请求封装<br>│   ├── assets/       # 🎨 静态资源<br>│   ├── components/   # 🧩 公共组件<br>│   ├── router/       # 🗺️ 路由配置<br>│   ├── store/        # 🏪 Vuex状态管理<br>│   ├── views/        # 🖼️ 页面组件<br>│   ├── App.vue       # 🌐 根组件<br>│   └── main.js       # ⚡ 入口文件<br>├── package.json      # 📦 依赖管理<br>└── vite.config.js    # ⚙️ Vite配置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">## 🔄 交互流程</span></span><br><span class="line"><span class="bullet">1.</span> 🌐 用户访问前端页面 (Vue)</span><br><span class="line"><span class="bullet">2.</span> 📡 前端通过axios调用后端API (SpringBoot)</span><br><span class="line"><span class="bullet">3.</span> 🛠️ 后端处理请求并返回JSON数据</span><br><span class="line"><span class="bullet">4.</span> 🎨 前端动态渲染页面</span><br><span class="line"></span><br><span class="line"><span class="section">## 🔧 开发环境</span></span><br></pre></td></tr></table></figure><p>🛠️ 后端: JDK 17+ + IDE（IntelliJ IDEA/VSCode）<br>🎨 前端: Node.js 16+ + VSCode<br>📦 构建: Maven（后端） + Vite（前端）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">## ⚠️ 注意事项</span></span><br><span class="line"><span class="bullet">-</span> 🔒 跨域配置（后端需添加<span class="code">`@CrossOrigin`</span>或全局配置）</span><br><span class="line"><span class="bullet">-</span> 🔄 API文档建议使用Swagger</span><br><span class="line"><span class="bullet">-</span> 🌐 部署时前端打包后文件可放入后端static目录或单独部署</span><br></pre></td></tr></table></figure><blockquote><p>图标说明：📁 文件夹 🖥️ 后端 🎨 前端 ⚙️ 配置 📡 接口 🧩 组件</p></blockquote>]]></content>
    
    
    <summary type="html">SpringBoot+Vue前后端分离项目结构</summary>
    
    
    
    <category term="springboot" scheme="https://lxttz.github.io/categories/springboot/"/>
    
    <category term="vue" scheme="https://lxttz.github.io/categories/springboot/vue/"/>
    
    <category term="全栈" scheme="https://lxttz.github.io/categories/springboot/vue/%E5%85%A8%E6%A0%88/"/>
    
    
    <category term="pringBoot+Vue前后端分离项目结构" scheme="https://lxttz.github.io/tags/pringBoot-Vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Vue 项目知识点总结</title>
    <link href="https://lxttz.github.io/posts/502688e5.html"/>
    <id>https://lxttz.github.io/posts/502688e5.html</id>
    <published>2025-04-07T07:25:11.000Z</published>
    <updated>2025-04-07T10:45:56.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📚 SpringBoot + Vue 项目知识点总结  </span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🚀 学习路径  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**前置知识**</span>  </span><br><span class="line"><span class="bullet">   -</span> ✅ Java 基础 + Spring 框架  </span><br><span class="line"><span class="bullet">   -</span> ✅ Vue.js 基础（组件、路由、状态管理）  </span><br><span class="line"><span class="bullet">   -</span> ✅ RESTful API 概念  </span><br><span class="line"><span class="bullet">   -</span> ✅ MySQL / PostgreSQL 数据库基础  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**学习顺序**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="strong">**后端（SpringBoot）→ 前端（Vue）→ 整合（前后端分离开发）**</span>  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 📌 核心知识点  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 🛠 <span class="strong">**后端（SpringBoot）**</span>  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**基础框架**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@SpringBootApplication`</span> 启动类  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring MVC`</span> 架构（Controller-Service-Repository）  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring Data JPA`</span> / <span class="code">`MyBatis`</span> 数据库操作  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**核心注解**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@RestController`</span> (返回 JSON)  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@RequestMapping`</span> / <span class="code">`@GetMapping`</span> / <span class="code">`@PostMapping`</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@Autowired`</span> 依赖注入  </span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**数据库 &amp; ORM**</span>  </span><br><span class="line"><span class="bullet">   -</span> JPA 方法命名查询 / <span class="code">`@Query`</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`@Entity`</span> 实体类映射  </span><br><span class="line"><span class="bullet">   -</span> 分页（<span class="code">`Pageable`</span>）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**安全 &amp; 认证**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Spring Security`</span> / <span class="code">`JWT`</span> 鉴权  </span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**API 规范**</span>  </span><br><span class="line"><span class="bullet">   -</span> RESTful 接口设计  </span><br><span class="line"><span class="bullet">   -</span> Swagger / OpenAPI 文档  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">### 🎨 <span class="strong">**前端（Vue）**</span>  </span></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**核心概念**</span>  </span><br><span class="line"><span class="bullet">   -</span> Vue 组件化开发  </span><br><span class="line"><span class="bullet">   -</span> 数据绑定（<span class="code">`v-model`</span>）  </span><br><span class="line"><span class="bullet">   -</span> 生命周期钩子（<span class="code">`created`</span>, <span class="code">`mounted`</span>）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**状态管理**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Vuex`</span>（集中式状态）  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`Pinia`</span>（推荐新项目使用）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**路由**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`vue-router`</span>（动态路由、嵌套路由）  </span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**HTTP 请求**</span>  </span><br><span class="line"><span class="bullet">   -</span> <span class="code">`axios`</span> 调用后端 REST API  </span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**UI 框架（可选）**</span>  </span><br><span class="line"><span class="bullet">   -</span> Element Plus / Ant Design Vue  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 🔥 快速搭建 SpringBoot + Vue 项目  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 步骤 1: 初始化后端（SpringBoot）  </span></span><br><span class="line"><span class="bullet">1.</span> 使用 [<span class="string">Spring Initializr</span>](<span class="link">https://start.spring.io/</span>) 生成项目:  </span><br><span class="line"><span class="bullet">   -</span> 勾选 <span class="code">`Spring Web`</span>, <span class="code">`Lombok`</span>, <span class="code">`Spring Data JPA`</span>, <span class="code">`MySQL Driver`</span>  </span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> 编写 <span class="code">`UserController`</span>:  </span><br><span class="line">   <span class="code">```java</span></span><br><span class="line"><span class="code">   @RestController</span></span><br><span class="line"><span class="code">   @RequestMapping(&quot;/api/users&quot;)</span></span><br><span class="line"><span class="code">   public class UserController &#123;</span></span><br><span class="line"><span class="code">       @Autowired</span></span><br><span class="line"><span class="code">       private UserService userService;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">       @GetMapping</span></span><br><span class="line"><span class="code">       public List&lt;User&gt; getAllUsers() &#123;</span></span><br><span class="line"><span class="code">           return userService.findAll();</span></span><br><span class="line"><span class="code">       &#125;</span></span><br><span class="line"><span class="code">   &#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>配置 <code>application.properties</code>:<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/your_db</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="步骤-2-初始化前端（Vue）">步骤 2: 初始化前端（Vue）</h3><ol><li><p>用 Vite 创建 Vue 项目:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend &amp;&amp; npm install axios vue-router pinia</span><br></pre></td></tr></table></figure></li><li><p>调用后端 API（<code>src/api/user.js</code>）:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUsers</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://localhost:8080/api/users&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>跨域配置（<code>vite.config.js</code>）:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="📝-学习资源推荐">📝 学习资源推荐</h2><ul><li><strong>SpringBoot</strong>: Baeldung / 官方文档</li><li><strong>Vue</strong>: 官方文档 + Vue Mastery 教程</li><li><strong>实战</strong>: GitHub 开源项目（如 <code>eladmin-web</code> + <code>eladmin</code>）</li></ul><h2 id="🌟-学习建议">🌟 学习建议</h2><ul><li>先单独调试后端（Postman 测试 API）</li><li>再调试前端（Chrome DevTools 看请求）</li><li>最后联调（解决跨域、数据格式问题）</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 🎯 效果说明  </span><br><span class="line">- 使用了 Emoji 图标增强可读性  </span><br><span class="line">- 分模块拆解知识点  </span><br><span class="line">- 提供可操作的代码片段  </span><br><span class="line">- 强调前后端分离的核心逻辑</span><br><span class="line"></span><br><span class="line">### 🤖 Assistant</span><br><span class="line"></span><br><span class="line">```markdown</span><br><span class="line"># 🌱 SpringBoot + Vue 全栈开发指南</span><br><span class="line"></span><br><span class="line">## 🏗️ 一、技术架构概览</span><br><span class="line">### 后端技术栈 (SpringBoot)</span><br><span class="line">```mermaid</span><br><span class="line">graph TD</span><br><span class="line">    A[SpringBoot] --&gt; B[Spring MVC]</span><br><span class="line">    A --&gt; C[Spring Security]</span><br><span class="line">    A --&gt; D[MyBatis/MyBatis-Plus]</span><br><span class="line">    A --&gt; E[Spring Data JPA]</span><br><span class="line">    F[MySQL/PostgreSQL] --&gt; D</span><br><span class="line">    G[Redis] --&gt; C</span><br></pre></td></tr></table></figure><h3 id="前端技术栈-Vue">前端技术栈 (Vue)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Vue3] --&gt; B[Vue Router]</span><br><span class="line">    A --&gt; C[Pinia/Vuex]</span><br><span class="line">    A --&gt; D[Axios]</span><br><span class="line">    A --&gt; E[Element Plus/Ant Design Vue]</span><br><span class="line">    A --&gt; F[Vite]</span><br></pre></td></tr></table></figure><h2 id="📚-二、完整学习路径">📚 二、完整学习路径</h2><h3 id="1-基础阶段（2-4周）">1. 基础阶段（2-4周）</h3><h4 id="后端基础">后端基础</h4><ul><li>✅ SpringBoot核心特性<ul><li>自动配置原理</li><li>Starter机制</li><li>Actuator监控</li></ul></li><li>✅ RESTful API设计<ul><li>常用注解：@RestController, @RequestMapping</li><li>统一响应封装</li><li>全局异常处理</li></ul></li></ul><h4 id="前端基础">前端基础</h4><ul><li>🖥️ Vue3核心语法<ul><li>Composition API</li><li>响应式原理(ref/reactive)</li><li>组件通信</li></ul></li><li>🌐 Vue Router 4.x<ul><li>动态路由</li><li>导航守卫</li><li>路由懒加载</li></ul></li></ul><h3 id="2-进阶阶段（3-5周）">2. 进阶阶段（3-5周）</h3><h4 id="后端进阶">后端进阶</h4><ul><li>🛡️ 安全控制<ul><li>JWT实现</li><li>Spring Security配置</li><li>权限注解(@PreAuthorize)</li></ul></li><li>🔄 数据持久化<ul><li>MyBatis动态SQL</li><li>多数据源配置</li><li>事务管理</li></ul></li></ul><h4 id="前端进阶">前端进阶</h4><ul><li>🏪 状态管理<ul><li>Pinia基础</li><li>模块化设计</li><li>持久化存储</li></ul></li><li>📡 网络请求<ul><li>Axios封装</li><li>请求拦截器</li><li>错误统一处理</li></ul></li></ul><h2 id="🚀-三、项目快速搭建指南">🚀 三、项目快速搭建指南</h2><h3 id="1-环境准备">1. 环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端环境</span></span><br><span class="line">JDK 17+</span><br><span class="line">Maven 3.8+</span><br><span class="line">MySQL 8.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端环境</span></span><br><span class="line">Node.js 16+</span><br><span class="line">npm/yarn/pnpm</span><br></pre></td></tr></table></figure><h3 id="2-项目初始化">2. 项目初始化</h3><h4 id="后端创建">后端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Spring Initializr</span></span><br><span class="line">https://start.spring.io/</span><br><span class="line"></span><br><span class="line">选择依赖：</span><br><span class="line">- Spring Web</span><br><span class="line">- Lombok</span><br><span class="line">- MyBatis Framework</span><br><span class="line">- MySQL Driver</span><br></pre></td></tr></table></figure><h4 id="前端创建">前端创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest frontend --template vue</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm install vue-router pinia axios element-plus</span><br></pre></td></tr></table></figure><h3 id="3-关键配置示例">3. 关键配置示例</h3><h4 id="后端配置">后端配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// application.yml</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper<span class="comment">/*.xml</span></span><br></pre></td></tr></table></figure><h4 id="前端配置">前端配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="🔧-四、开发实用技巧">🔧 四、开发实用技巧</h2><h3 id="跨域解决方案">跨域解决方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端配置CORS</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理">全局异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">handleException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端API封装">前端API封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="📦-五、部署方案">📦 五、部署方案</h2><h3 id="1-后端打包">1. 后端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br><span class="line">java -jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><h3 id="2-前端打包">2. 前端打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="3-部署架构选择">3. 部署架构选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 传统部署</span><br><span class="line"><span class="bullet">   -</span> Nginx反向代理</span><br><span class="line"><span class="bullet">   -</span> 静态资源部署</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> Docker化部署</span><br><span class="line"><span class="bullet">   -</span> Docker Compose编排</span><br><span class="line"><span class="bullet">   -</span> Nginx容器配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> CI/CD方案</span><br><span class="line"><span class="bullet">   -</span> Jenkins Pipeline</span><br><span class="line"><span class="bullet">   -</span> GitHub Actions</span><br></pre></td></tr></table></figure><h2 id="📝-六、学习资源推荐">📝 六、学习资源推荐</h2><ul><li>书籍：<ul><li>《Spring Boot实战》</li><li>《Vue.js设计与实现》</li></ul></li><li>视频：<ul><li>B站尚硅谷SpringBoot+Vue全栈课程</li></ul></li><li>文档：<ul><li><a href="https://spring.io/projects/spring-boot">Spring官方文档</a></li><li><a href="https://vuejs.org/">Vue官方文档</a></li></ul></li><li>社区：<ul><li>StackOverflow</li><li>GitHub热门开源项目</li></ul></li></ul><h2 id="🚨-常见问题排查">🚨 常见问题排查</h2><ol><li><p>端口冲突：检查8080/3000端口占用</p></li><li><p>数据库连接失败：检查MySQL服务状态和账号权限</p></li><li><p>跨域问题：确保前后端CORS配置正确</p></li><li><p>前端路由404：配置Nginx重定向规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">SpringBoot + Vue 项目知识点总结</summary>
    
    
    
    <category term="SpringBoot" scheme="https://lxttz.github.io/categories/SpringBoot/"/>
    
    <category term="Vue" scheme="https://lxttz.github.io/categories/SpringBoot/Vue/"/>
    
    
    <category term="SpringBoot+Vue 项目知识点总结" scheme="https://lxttz.github.io/tags/SpringBoot-Vue-%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>解决博客文章嵌入网页显示不足的方法</title>
    <link href="https://lxttz.github.io/posts/42339686.html"/>
    <id>https://lxttz.github.io/posts/42339686.html</id>
    <published>2025-03-27T09:57:32.000Z</published>
    <updated>2025-03-27T10:00:10.168Z</updated>
    
    <content type="html"><![CDATA[<h1>一般代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://geekprank.com/hacker/&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">scrolling</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">frameborder</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">high_quality</span>=<span class="string">1</span></span></span><br><span class="line"><span class="tag">    <span class="attr">danmaku</span>=<span class="string">1</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要让嵌入的网页内容完整显示在iframe中，建议采用以下方案：</p><ol><li><strong>动态调整高度方案</strong>（推荐）：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">id</span>=<span class="string">&quot;dynamic-iframe&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;dynamic-iframe&#x27;</span>).<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">documentElement</span>.<span class="property">scrollHeight</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">documentElement</span>.<span class="property">scrollWidth</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>固定尺寸方案</strong>（简单直接）：选择这个方法最好</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;auto&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">height</span>=<span class="string">&quot;800px&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>响应式布局方案</strong>：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding-top: 56.25%;&quot;</span>&gt;</span> <span class="comment">&lt;!-- 16:9比例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://jishiqi-evx.pages.dev/&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><ol><li>动态方案需要目标页面支持跨域通信（如果同源则无需处理）</li><li>固定尺寸方案需要根据实际内容调整高度</li><li>响应式方案会保持16:9比例，适合视频类内容</li><li>建议保留allowfullscreen属性以支持全屏功能</li><li>如果内容包含动态加载部分，可能需要添加MutationObserver来持续调整高度</li></ol><p>推荐使用第一种动态方案，它可以根据内容自动调整尺寸，实现无滚动条完整显示。如果内容包含复杂交互或动态加载元素，建议结合ResizeObserver API实现更精确的尺寸控制。</p>]]></content>
    
    
    <summary type="html">解决博客文章嵌入网页显示不足的方法</summary>
    
    
    
    <category term="博客" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="博客技巧" scheme="https://lxttz.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>计时器赛博网站的搭建</title>
    <link href="https://lxttz.github.io/posts/bc906d3f.html"/>
    <id>https://lxttz.github.io/posts/bc906d3f.html</id>
    <published>2025-03-27T09:39:47.000Z</published>
    <updated>2025-03-27T09:56:02.129Z</updated>
    
    <content type="html"><![CDATA[<h1>演示效果</h1><h2 id="网址">网址</h2><p>网址:<a href="https://jishiqi-evx.pages.dev/">https://jishiqi-evx.pages.dev/</a></p><div align=center>    <iframe src="https://jishiqi-evx.pages.dev/"             scrolling="auto"             border="0"             frameborder="0"             framespacing="0"             width="100%"             height="800px"            allowfullscreen="true">    </iframe></div><h1>文件内容</h1><p>index.html<br>muyu.svg   电子木鱼svg<br>robot.svg  机器人svg<br>script.js<br>style.css</p><h1>具体代码如下</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 计时器项目文件结构</span></span><br><span class="line"></span><br><span class="line"><span class="section">## index.html</span></span><br><span class="line"><span class="code">```html</span></span><br><span class="line"><span class="code">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="code">&lt;html lang=&quot;zh-CN&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;head&gt;</span></span><br><span class="line"><span class="code">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;title&gt;计时器&lt;/title&gt;</span></span><br><span class="line"><span class="code">    &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;/head&gt;</span></span><br><span class="line"><span class="code">&lt;body&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;robot left-robot&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;img src=&quot;robot.svg&quot; alt=&quot;赛博机器人&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    &lt;div class=&quot;robot right-robot&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;img src=&quot;robot.svg&quot; alt=&quot;赛博机器人&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    &lt;div class=&quot;timer-container&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;h1&gt;计时器&lt;/h1&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;display&quot;&gt;00:00:00&lt;/div&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;controls&quot;&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;startStop&quot;&gt;开始&lt;/button&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;reset&quot;&gt;重置&lt;/button&gt;</span></span><br><span class="line"><span class="code">        &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    &lt;div class=&quot;countdown-container&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;h1&gt;倒计时&lt;/h1&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;countdown-display&quot;&gt;00:00:00&lt;/div&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;countdown-controls&quot;&gt;</span></span><br><span class="line"><span class="code">            &lt;div class=&quot;time-input&quot;&gt;</span></span><br><span class="line"><span class="code">                &lt;input type=&quot;number&quot; id=&quot;hours&quot; min=&quot;0&quot; max=&quot;23&quot; placeholder=&quot;时&quot;&gt;</span></span><br><span class="line"><span class="code">                &lt;span&gt;:&lt;/span&gt;</span></span><br><span class="line"><span class="code">                &lt;input type=&quot;number&quot; id=&quot;minutes&quot; min=&quot;0&quot; max=&quot;59&quot; placeholder=&quot;分&quot;&gt;</span></span><br><span class="line"><span class="code">                &lt;span&gt;:&lt;/span&gt;</span></span><br><span class="line"><span class="code">                &lt;input type=&quot;number&quot; id=&quot;seconds&quot; min=&quot;0&quot; max=&quot;59&quot; placeholder=&quot;秒&quot;&gt;</span></span><br><span class="line"><span class="code">            &lt;/div&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;countdown&quot;&gt;开始倒计时&lt;/button&gt;</span></span><br><span class="line"><span class="code">            &lt;button id=&quot;resetCountdown&quot;&gt;重置&lt;/button&gt;</span></span><br><span class="line"><span class="code">        &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;calendar-container&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;calendar&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;wooden-fish&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;img src=&quot;muyu.svg&quot; alt=&quot;电子木鱼&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;fish-counter&quot;&gt;0&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="code">&lt;/body&gt;</span></span><br><span class="line"><span class="code">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h2 id="script-js">script.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timer;</span><br><span class="line"><span class="keyword">let</span> countdownTimer;</span><br><span class="line"><span class="keyword">let</span> isRunning = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> isCountdownRunning = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> milliseconds = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> seconds = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> minutes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> hours = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> countdownHours = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> countdownMinutes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> countdownSeconds = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DOM元素获取和事件监听...</span></span><br><span class="line"><span class="comment">// 完整计时器逻辑...</span></span><br><span class="line"><span class="comment">// 倒计时实现...</span></span><br><span class="line"><span class="comment">// 日历更新功能...</span></span><br><span class="line"><span class="comment">// 电子木鱼交互...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 详细实现代码同用户提供的原始内容</span></span><br></pre></td></tr></table></figure><h2 id="style-css">style.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">135deg</span>, <span class="number">#1a1a2e</span>, <span class="number">#16213e</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">gap</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 赛博机器人样式 */</span></span><br><span class="line"><span class="selector-class">.robot</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: float <span class="number">8s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.36</span>,<span class="number">0</span>,<span class="number">0.64</span>,<span class="number">1</span>) infinite;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>));</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 计时器容器样式 */</span></span><br><span class="line"><span class="selector-class">.timer-container</span>, <span class="selector-class">.countdown-container</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.15</span>);</span><br><span class="line">    <span class="attribute">backdrop-filter</span>: <span class="built_in">blur</span>(<span class="number">15px</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 按钮特效 */</span></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">145deg</span>, <span class="number">#00b4db</span>, <span class="number">#0083b0</span>);</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">15px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">180</span>, <span class="number">219</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 电子木鱼样式 */</span></span><br><span class="line"><span class="selector-class">.wooden-fish</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>));</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 完整样式规则同用户提供的原始内容 */</span></span><br></pre></td></tr></table></figure><h2 id="功能特性">功能特性</h2><ul><li>双模式计时：正向计时器 + 可配置倒计时</li><li>赛博朋克视觉风格：渐变背景 + 浮动机器人装饰</li><li>响应式布局：自适应屏幕尺寸</li><li>交互特效：按钮涟漪效果 + 悬浮动画</li><li>扩展功能：实时日历 + 电子木鱼彩蛋</li></ul><h2 id="使用说明">使用说明</h2><ol><li><p><strong>计时器操作</strong>：</p><ul><li>开始/暂停按钮控制计时</li><li>重置按钮清零时间</li></ul></li><li><p><strong>倒计时设置</strong>：</p><ul><li>输入时/分/秒数值</li><li>开始倒计时后显示剩余时间</li><li>可随时暂停或重置</li></ul></li><li><p><strong>彩蛋功能</strong>：</p><ul><li>点击右下角木鱼积累点击次数</li><li>带有点击动画效果</li><li>实时显示累计点击次数</li></ul></li></ol><pre><code></code></pre>]]></content>
    
    
    <summary type="html">计时器赛博网站的搭建</summary>
    
    
    
    <category term="编程" scheme="https://lxttz.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="小应用" scheme="https://lxttz.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%B0%8F%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="计时器" scheme="https://lxttz.github.io/tags/%E8%AE%A1%E6%97%B6%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>优质源码网站分享</title>
    <link href="https://lxttz.github.io/posts/55052059.html"/>
    <id>https://lxttz.github.io/posts/55052059.html</id>
    <published>2025-03-19T10:15:33.000Z</published>
    <updated>2025-03-19T10:17:07.370Z</updated>
    
    <content type="html"><![CDATA[<h1>📚 优质源码网站分享</h1><p>以下是一些比较优质的源码网站（付费的内容不建议下载，因为不值得）：</p><h2 id="🌟-综合源码网站">🌟 综合源码网站</h2><ol><li><strong>51源码</strong>: <a href="http://www.51aspx.com/">http://www.51aspx.com/</a></li><li><strong>源码之家</strong>: <a href="http://www.codejia.com/">http://www.codejia.com/</a></li><li><strong>源码网</strong>: <a href="http://www.codepub.com/">http://www.codepub.com/</a></li><li><strong>虾客源码</strong>: <a href="http://www.xkxz.com/">http://www.xkxz.com/</a></li><li><strong>多多源码</strong>: <a href="http://www.morecode.net/">http://www.morecode.net/</a></li><li><strong>洪越源代码</strong>: <a href="http://www.softhy.net/">http://www.softhy.net/</a></li><li><strong>锋网源码</strong>: <a href="http://www.fwvv.net/">http://www.fwvv.net/</a></li><li><strong>代码爱好者</strong>: <a href="http://www.codefans.com/">http://www.codefans.com/</a></li><li><strong>爱源码</strong>: <a href="http://www.aiyuanma.com/">http://www.aiyuanma.com/</a></li><li><strong>酷源码</strong>: <a href="http://www.kyuanma.com/">http://www.kyuanma.com/</a></li><li><strong>搜源码</strong>: <a href="http://www.soucode.com/">http://www.soucode.com/</a></li><li><strong>拉基源码</strong>: <a href="http://www.lajicode.com/">http://www.lajicode.com/</a></li><li><strong>源码开发网</strong>: <a href="http://www.codedn.com/">http://www.codedn.com/</a></li><li><strong>源码天空</strong>: <a href="http://www.codesky.net/">http://www.codesky.net/</a></li><li><strong>源码吧</strong>: <a href="http://www.asp88.net/">http://www.asp88.net/</a></li><li><strong>绿色源码</strong>: <a href="http://code888.cn/">http://code888.cn/</a></li><li><strong>9号源码中心</strong>: <a href="http://www.9code.com/">http://www.9code.com/</a></li><li><strong>网馨源码</strong>: <a href="http://www.asppsa.com/">http://www.asppsa.com/</a></li><li><strong>源码天下</strong>: <a href="http://www.pccode.net/">http://www.pccode.net/</a></li><li><strong>需要源码</strong>: <a href="http://www.needcode.cn/">http://www.needcode.cn/</a></li><li><strong>华夏源码</strong>: <a href="http://www.haocpu.com/">http://www.haocpu.com/</a></li><li><strong>天新网</strong>: <a href="http://codes.21tx.com/">http://codes.21tx.com/</a></li><li><strong>源码网</strong>: <a href="http://www.yuanma5.com/">http://www.yuanma5.com/</a></li><li><strong>无忧源码</strong>: <a href="http://www.5uym.com/">http://www.5uym.com/</a></li><li><strong>中国下载站</strong>: <a href="http://www.cnz.cc/">http://www.cnz.cc/</a></li><li><strong>资源吧</strong>: <a href="http://www.ziyuan8.com/">http://www.ziyuan8.com/</a></li><li><strong>启明星源码</strong>: <a href="http://www.codewww.com/">http://www.codewww.com/</a></li><li><strong>我要源码</strong>: <a href="http://www.xia51.com/">http://www.xia51.com/</a></li><li><strong>清秋源码</strong>: <a href="http://www.asp678.com/">http://www.asp678.com/</a></li></ol><h2 id="🖥️-C-源码网站">🖥️ C++ 源码网站</h2><ol><li><strong>DZone Snippets</strong>: <a href="http://snippets.dzone.com/tag/c/">http://snippets.dzone.com/tag/c/</a></li><li><strong>Hotscripts</strong>: <a href="http://www.hotscripts.com/category/c-cpp/scripts-programs/">http://www.hotscripts.com/category/c-cpp/scripts-programs/</a></li><li><strong>Planet Source Code</strong>: <a href="http://www.planetsourcecode.com/vb/default.asp?lngWId=3">http://www.planetsourcecode.com/vb/default.asp?lngWId=3</a></li><li><strong>Best Open Source Mac Software Development Software 2022</strong>: <a href="https://sourceforge.net/directory/development/macos/">https://sourceforge.net/directory/development/macos/</a></li><li><strong>DaniWeb</strong>: <a href="http://www.daniweb.com/">‘c’ Code Snippet Repository | DaniWeb</a></li><li><strong>Programmer’s Heaven</strong>: <a href="http://www.programmersheaven.com/tags/C/">http://www.programmersheaven.com/tags/C/</a></li><li><strong>Dr. Dobb’s Journal</strong>: <a href="http://www.ddj.com/code/ddj.html">http://www.ddj.com/code/ddj.html</a></li><li><strong><a href="http://Cprogramming.com">Cprogramming.com</a></strong>: <a href="https://www.cprogramming.com/code.html">https://www.cprogramming.com/code.html</a></li><li><strong>CodeCogs</strong>: <a href="http://www.codecogs.com/">http://www.codecogs.com/</a></li><li><strong>Google Code Search</strong>: <a href="http://www.google.com/codesearch">http://www.google.com/codesearch</a></li><li><strong>CodePedia</strong>: <a href="http://www.codepedia.com/1/C">http://www.codepedia.com/1/C</a></li><li><strong>CIS71: Some Simple C Programs</strong>: <a href="http://cis1.towson.edu/~csicim71/code/index.html">http://cis1.towson.edu/~csicim71/code/index.html</a></li><li><strong>CodeProject</strong>: <a href="https://www.codeproject.com/">https://www.codeproject.com/</a></li><li><strong>The Free Country</strong>: <a href="https://www.thefreecountry.com/sourcecode/cpp.shtml">https://www.thefreecountry.com/sourcecode/cpp.shtml</a></li><li><strong>C++ Source Codes</strong>: <a href="http://www.cppforschool.com/projects.html">http://www.cppforschool.com/projects.html</a></li><li><strong>General Console and Windows C++ Programs</strong>: <a href="http://www.cplusplus.com/doc/tutorial/program_structure/">http://www.cplusplus.com/doc/tutorial/program_structure/</a></li><li><strong>Data Structures and Algorithm Analysis in C++</strong>: <a href="http://users.cis.fiu.edu/~weiss/dsaa_c++4/code/">http://users.cis.fiu.edu/~weiss/dsaa_c++4/code/</a></li><li><strong>C Snippets</strong>: <a href="http://c.snippets.org/">http://c.snippets.org/</a></li><li><strong>BBDSoft</strong>: <a href="http://www.bbdsoft.com/">http://www.bbdsoft.com/</a></li><li><strong>Astronomy and Numerical Software Source Codes</strong>: <a href="http://www.astro.utoronto.ca/~garrett/code/">http://www.astro.utoronto.ca/~garrett/code/</a></li><li><strong>C and C++ Programming</strong>: <a href="http://www.cprogramming.com/code.html">http://www.cprogramming.com/code.html</a></li><li><strong>Free C/C++ Numerical Computing Source Code</strong>: <a href="http://www.robertnz.net/c_soft.htm">http://www.robertnz.net/c_soft.htm</a></li><li><strong><a href="http://Mathtools.net">Mathtools.net</a></strong>: <a href="http://www.mathtools.net/">http://www.mathtools.net/</a></li><li><strong>Free Libraries and Source Code for C++</strong>: <a href="https://www.thefreecountry.com/sourcecode/cpp.shtml">https://www.thefreecountry.com/sourcecode/cpp.shtml</a></li><li><strong>Brad Appleton’s C++ Links</strong>: <a href="http://www.cmcrossroads.com/bradapp/links/cplusplus-links.html">http://www.cmcrossroads.com/bradapp/links/cplusplus-links.html</a></li><li><strong>Sites of Interest to C++ Users</strong>: <a href="http://www.stroustrup.com/C++.html">http://www.stroustrup.com/C++.html</a></li><li><strong>The C++ Standard Library: Example Programs</strong>: <a href="http://www.cppstdlib.com/">http://www.cppstdlib.com/</a></li><li><strong>C/C++ User Journal</strong>: <a href="ftp://66.77.27.238/sourcecode/cuj/">ftp://66.77.27.238/sourcecode/cuj/</a></li><li><strong>Windows Developer Network</strong>: <a href="ftp://66.77.27.238/sourcecode/wd/">ftp://66.77.27.238/sourcecode/wd/</a></li><li><strong>C and C++ Programming</strong>: <a href="http://www.cprogramming.com/code.html">http://www.cprogramming.com/code.html</a></li></ol><h2 id="🔍-特殊网站">🔍 特殊网站</h2><ol><li><strong>Stack Overflow</strong>: <a href="https://stackoverflow.com/">https://stackoverflow.com/</a></li><li><strong>12580code</strong>: <a href="http://www.12580code.com/">http://www.12580code.com/</a></li><li><strong>CSDN下载</strong>: <a href="https://download.csdn.net/">https://download.csdn.net/</a></li><li><strong>码云</strong>: <a href="https://gitee.com/">https://gitee.com/</a></li></ol><hr><p>希望这些资源对你有所帮助！✨</p>]]></content>
    
    
    <summary type="html">质源码网站分享</summary>
    
    
    
    <category term="网站" scheme="https://lxttz.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="源码网站分析" scheme="https://lxttz.github.io/tags/%E6%BA%90%E7%A0%81%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>电脑技巧秒招</title>
    <link href="https://lxttz.github.io/posts/605f7ae8.html"/>
    <id>https://lxttz.github.io/posts/605f7ae8.html</id>
    <published>2025-03-19T09:08:23.000Z</published>
    <updated>2025-03-19T09:50:06.691Z</updated>
    
    <content type="html"><![CDATA[<h1>时间2025年3月19</h1><h2 id="强制删除电脑文件">强制删除电脑文件</h2><p>方法一：（进入电脑安全模式下删除文件）<br>（1）win+r 输入msconfig 点确定进入系统配置界面<br>（2）切换到引导》安全引导》确定》重启启动<br>（3）删除文件，清理回收站<br>（4）重复（1）（2）取消勾选安全引导</p><h2 id="结束explorer-exe任务运行导致电脑黑屏只有鼠标光标解决方法">结束explorer.exe任务运行导致电脑黑屏只有鼠标光标解决方法</h2><h2 id="方法一：（1）关机，开机（2）进入任务管理器-快捷键ctrl-enter-esc进入（3）找到运行新任务（4）输入explorer-exe-点击确定">方法一：<br>（1）关机，开机<br>（2）进入任务管理器  快捷键ctrl+enter+esc进入<br>（3）找到运行新任务<br>（4）输入explorer.exe  点击确定</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;时间2025年3月19&lt;/h1&gt;
&lt;h2 id=&quot;强制删除电脑文件&quot;&gt;强制删除电脑文件&lt;/h2&gt;
&lt;p&gt;方法一：（进入电脑安全模式下删除文件）&lt;br&gt;
（1）win+r 输入msconfig 点确定进入系统配置界面&lt;br&gt;
（2）切换到引导》安全引导》确定》重启启动&lt;br</summary>
      
    
    
    
    <category term="电脑知识" scheme="https://lxttz.github.io/categories/%E7%94%B5%E8%84%91%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="电脑技巧秒招" scheme="https://lxttz.github.io/tags/%E7%94%B5%E8%84%91%E6%8A%80%E5%B7%A7%E7%A7%92%E6%8B%9B/"/>
    
  </entry>
  
  <entry>
    <title>Cursor异常问题全解析+无限使用</title>
    <link href="https://lxttz.github.io/posts/64908bd0.html"/>
    <id>https://lxttz.github.io/posts/64908bd0.html</id>
    <published>2025-03-19T06:48:32.000Z</published>
    <updated>2025-03-19T08:22:20.229Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><h1>🚨 Cursor异常问题全解析与解决方案大全 🔧</h1><h1>1. 经典问题了哈，起手就秒了！：Too many free trials</h1><h2 id="⚠️-报错长这样">⚠️ 报错长这样:</h2><p>Too many free trial accounts used on this machine.<br>Please upgrade to pro. We have this limit in place<br>to prevent abuse. Please let us know if you believe this is a mistake.<br>🛠️ 解决方案</p><h2 id="🌏-海外用户看这里">🌏 海外用户看这里</h2><p>Linux/macOS</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.sh | sudo bash</span><br></pre></td></tr></table></figure><p>Windowsirm</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.ps1 | iex</span><br></pre></td></tr></table></figure><h2 id="🇨🇳-国内用户看这里（推荐）">🇨🇳 国内用户看这里（推荐）</h2><h3 id="macOS">macOS</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Linux">Linux</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Windows">Windows</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex</span><br></pre></td></tr></table></figure><h1>2. 邮箱后缀被拉黑或者账号被封：Unauthorized request</h1><h2 id="⚠️-报错长这样Unauthorized-request">⚠️ 报错长这样Unauthorized request.</h2><p>🛠️ 咋整说白了就是你在一个IP（节点）短时间内用临时邮箱注册太多账号了，被风控了！这种情况看脸，运气好半小时就解封了，运气不好可能就永久封号了。<br>建议：<br>• 换个IP节点试试• 别用临时邮箱了，整个正经邮箱（微软、雅虎、163、QQ、Gmail都行）</p><h1>3. 到底怎么回事：Trial request limit</h1><h2 id="⚠️-报错长这样You’ve-reached-your-trial-request-limit">⚠️ 报错长这样You’ve reached your trial request limit</h2><p>🛠️ 咋整<br>临时解决方案</p><h3 id="方案一：快速重置（推荐）">方案一：快速重置（推荐）</h3><ol><li>先把 Cursor 关了</li><li>执行下面那个重置机器码的脚本</li><li>重新打开 Cursor 就完事了</li></ol><h3 id="方案二：换号大法">方案二：换号大法</h3><ol><li>文件 -&gt; Cursor Settings -&gt; 把当前账号注销了</li><li>关了 Cursor</li><li>执行重置机器码脚本</li><li>换个号登录<br>⚠️ 要是还不行试试这些：• 换个低延迟的节点（日本、新加坡、美国、香港都可以）• 网络整稳定点• 浏览器缓存清一下</li></ol><h2 id="🛠️-重置机器码脚本">🛠️ 重置机器码脚本</h2><h3 id="macOS-2">macOS</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Linux-2">Linux</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash</span><br></pre></td></tr></table></figure><h3 id="Windows-2">Windows</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex</span><br></pre></td></tr></table></figure><h1>4. Pro账号用完配额咋整？</h1><p>⚠️ 报错长这样<br>1、Our servers are currently overloaded for non-pro users, and you’ve used your free quota. <br>Please try again in a few minutes. If you think this is a mistake, please contact <a href="mailto:hi@cursor.sh">hi@cursor.sh</a></p><p>2、You’ve used up your 50 free claude-3.5-sonnet requests.<br>You can continue using claude-3.5-sonnet by subscribing to Pro or entering your OpenAI key in settings. <br>Otherwise, you can stay on our free plan (200 cursor-small requests per month).<br>🛠️ 咋整这位少侠，胜败乃兵家常事（换号）</p><h2 id="📚-目录导航">📚 目录导航</h2><ul><li><a href="#1%EF%B8%8F%E2%83%A3-too-many-free-trials">1️⃣ Too many free trials</a></li><li><a href="#2%EF%B8%8F%E2%83%A3-%E9%82%AE%E7%AE%B1%E8%B4%A6%E5%8F%B7%E8%A2%AB%E5%B0%81%E7%A6%81">2️⃣ 邮箱/账号被封禁</a></li><li><a href="#3%EF%B8%8F%E2%83%A3-trial-request-limit">3️⃣ Trial request limit</a></li><li><a href="#4%EF%B8%8F%E2%83%A3-pro%E8%B4%A6%E5%8F%B7%E9%85%8D%E9%A2%9D%E8%80%97%E5%B0%BD">4️⃣ Pro账号配额耗尽</a></li><li><a href="#5%EF%B8%8F%E2%83%A3-%E6%9C%80%E5%90%8Ebb%E4%B8%A4%E5%8F%A5">5️⃣ 终极指南</a></li></ul><hr><h2 id="1️⃣-Too-many-free-trials">1️⃣ Too many free trials</h2><h3 id="⚠️-典型报错">⚠️ 典型报错</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Too many free trial accounts used on this machine.</span><br><span class="line">Please upgrade to pro. We have this limit in place</span><br><span class="line">to prevent abuse.</span><br></pre></td></tr></table></figure><h3 id="🔧-解决方案">🔧 解决方案</h3><h4 id="🌏-海外直连方案">🌏 海外直连方案</h4><table><thead><tr><th>平台</th><th>执行命令</th></tr></thead><tbody><tr><td>Linux/macOS</td><td>`curl -fsSL <a href="https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.sh">https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.sh</a></td></tr><tr><td>Windows</td><td>`irm <a href="https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.ps1">https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/scripts/install.ps1</a></td></tr></tbody></table><h4 id="🇨🇳-国内加速方案">🇨🇳 国内加速方案</h4><table><thead><tr><th>平台</th><th>执行命令</th></tr></thead><tbody><tr><td>macOS</td><td><code>curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash</code></td></tr><tr><td>Linux</td><td><code>curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash</code></td></tr><tr><td>Windows</td><td><code>irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex</code></td></tr></tbody></table><p>🔗 <strong>开源项目地址</strong>：<a href="https://github.com/yuaotian/go-cursor-help">https://github.com/yuaotian/go-cursor-help</a></p><hr><h2 id="2️⃣-邮箱-账号被封禁">2️⃣ 邮箱/账号被封禁</h2><h3 id="⚠️-报错提示">⚠️ 报错提示</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unauthorized request.</span><br></pre></td></tr></table></figure><h3 id="🔧-解决方案-2">🔧 解决方案</h3><p>💡 <strong>黄金三法则</strong>：</p><ol><li>🛡️ 立即切换IP节点（推荐：日本/新加坡/美国）</li><li>📧 改用正规邮箱（Gmail/Outlook/QQ/163）</li><li>⏳ 冷静等待0.5-12小时自动解封</li></ol><hr><h2 id="3️⃣-Trial-request-limit">3️⃣ Trial request limit</h2><h3 id="⚠️-报错提示-2">⚠️ 报错提示</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You&#x27;ve reached your trial request limit</span><br></pre></td></tr></table></figure><h3 id="🔧-紧急应对方案">🔧 紧急应对方案</h3><h4 id="极速重置法">极速重置法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># macOS/Linux</span></span><br><span class="line">curl -fsSL https://aizaozao.com/.../cursor_mac_id_modifier.sh | <span class="built_in">sudo</span> bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows（管理员模式）</span></span><br><span class="line">irm https://aizaozao.com/.../cursor_win_id_modifier.ps1 | iex</span><br></pre></td></tr></table></figure><h4 id="💾-换号攻略">💾 换号攻略</h4><ol><li><code>文件 -&gt; Cursor Settings -&gt; 注销账号</code></li><li>彻底关闭客户端</li><li>执行机器码重置脚本</li><li>使用新邮箱注册</li></ol><hr><h2 id="4️⃣-Pro账号配额耗尽">4️⃣ Pro账号配额耗尽</h2><h3 id="⚠️-典型报错-2">⚠️ 典型报错</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. Our servers are currently overloaded...</span><br><span class="line">2. You&#x27;ve used up your 50 free claude-3.5-sonnet requests.</span><br></pre></td></tr></table></figure><h3 id="🔄-解决方案">🔄 解决方案</h3><p>🔨 <strong>终极奥义：</strong></p><ul><li>🆕 创建新Pro账号</li><li>🔑 绑定OpenAI密钥：<a href="https://platform.openai.com/api-keys">OpenAI API控制台</a></li><li>💰 土豪专属通道：<a href="https://cursor.sh/pricing">升级无限套餐</a></li></ul><hr><h2 id="5️⃣-最后BB两句">5️⃣ 最后BB两句</h2><h3 id="⚠️-高危预警">⚠️ 高危预警</h3><table><thead><tr><th>风险行为</th><th>后果等级</th></tr></thead><tbody><tr><td>频繁切换免费账号</td><td>🔴 红牌</td></tr><tr><td>单台设备注册超5个账号</td><td>🟠 橙牌</td></tr><tr><td>使用10分钟邮箱</td><td>🟡 黄牌</td></tr></tbody></table><h3 id="💎-生存指南">💎 生存指南</h3><ol><li>🌐 保持稳定网络环境</li><li>🔄 合理控制API调用频率</li><li>📦 重要项目建议购买正版：<a href="https://cursor.sh">官网订阅</a></li><li>🆘 加急客服通道：hi@cursor.sh</li></ol><blockquote><p>🔥 <strong>终极提示</strong>：所有解决方案均来自开源社区，建议优先支持正版服务<br>🚀 <strong>加速镜像站</strong>：<a href="https://aizaozao.com/cursor">https://aizaozao.com/cursor</a></p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">该文档特点：</span><br><span class="line"><span class="bullet">1.</span> 🌐 <span class="strong">**全平台覆盖**</span>：精准标注Win/Mac/Linux三端指令</span><br><span class="line"><span class="bullet">2.</span> ⚡ <span class="strong">**风险预警系统**</span>：采用三色牌风险评级机制</span><br><span class="line"><span class="bullet">3.</span> 🔗 <span class="strong">**直达链接**</span>：集成所有关键地址一键跳转</span><br><span class="line"><span class="bullet">4.</span> 💡 <span class="strong">**智能分级**</span>：按问题紧急程度分层处理</span><br><span class="line"><span class="bullet">5.</span> 🛡️ <span class="strong">**合规提示**</span>：强调支持正版和开发者权益</span><br><span class="line"></span><br><span class="line">原文链接</span><br><span class="line"><span class="code">```text</span></span><br><span class="line"><span class="code">https://mp.weixin.qq.com/s/pnJrH7Ifx4WZvseeP1fcEA</span></span><br><span class="line"><span class="code">https://blog.csdn.net/ARLULUHUB/article/details/145717645</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Cursor异常问题全解析与解决方案大全</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    <category term="ai编程" scheme="https://lxttz.github.io/categories/ai/ai%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="cursor" scheme="https://lxttz.github.io/tags/cursor/"/>
    
  </entry>
  
  <entry>
    <title>5个神级AI提示词网站推荐</title>
    <link href="https://lxttz.github.io/posts/9190d66f.html"/>
    <id>https://lxttz.github.io/posts/9190d66f.html</id>
    <published>2025-03-19T05:46:36.000Z</published>
    <updated>2025-03-19T05:48:44.768Z</updated>
    
    <content type="html"><![CDATA[<h1>🚀 5个神级AI提示词网站推荐 | 效率翻倍必备</h1><hr><h2 id="🌐-ChatGPT提示词专题">🌐 <strong>ChatGPT提示词专题</strong></h2><h3 id="🔗-1-SnackPrompt-snackprompt-com">🔗 1. SnackPrompt [<a href="http://snackprompt.com">snackprompt.com</a>]</h3><h4 id="✅-优点">✅ 优点</h4><ul><li><strong>极简高效</strong>：界面清爽，直接提供精选提示词模板</li><li><strong>新手友好</strong>：附带「一键复制」功能，快速实用</li><li><strong>场景分类</strong>：涵盖写作/编程/营销等主流领域</li></ul><h4 id="❌-缺点">❌ 缺点</h4><ul><li>更新频率较低（最近提示词多为3个月前更新）</li><li>缺少用户讨论区互动</li></ul><h4 id="🚀-推荐场景">🚀 推荐场景</h4><p>适合需要快速获取现成模板的ChatGPT新人</p><hr><h3 id="🔗-2-FlowGPT-flowgpt-com">🔗 2. FlowGPT [<a href="http://flowgpt.com">flowgpt.com</a>]</h3><h4 id="✅-优点-2">✅ 优点</h4><ul><li><strong>场景极丰富</strong>：5000+提示词覆盖学术/娱乐/商业全领域</li><li><strong>交互体验强</strong>：支持关键词搜索+分类筛选+用户评分系统</li><li><strong>实时更新</strong>：每日新增用户原创提示词</li></ul><h4 id="❌-缺点-2">❌ 缺点</h4><ul><li>英文内容占比80%以上</li><li>需注册才能查看完整功能</li></ul><h4 id="🚀-推荐场景-2">🚀 推荐场景</h4><p>适合中高级用户挖掘创意玩法</p><hr><h2 id="🤖-多模型提示词仓库">🤖 <strong>多模型提示词仓库</strong></h2><h3 id="🔗-3-PromptHero-prompthero-com">🔗 3. PromptHero [<a href="http://prompthero.com">prompthero.com</a>]</h3><h4 id="✅-优点-3">✅ 优点</h4><ul><li><strong>全模型支持</strong>：覆盖ChatGPT/Stable Diffusion/Midjourney等</li><li><strong>创作者经济</strong>：可直接购买专业作者创作的收费提示词包</li><li><strong>图片案例展示</strong>：每个SD提示词标注生成参数和示例图</li></ul><h4 id="❌-缺点-3">❌ 缺点</h4><ul><li>热门内容需付费解锁</li><li>广告弹窗影响体验</li></ul><h4 id="🚀-推荐场景-3">🚀 推荐场景</h4><p>适合需要跨平台Prompt解决方案的设计师/开发者</p><hr><h2 id="🎨-Stable-Diffusion专业向">🎨 <strong>Stable Diffusion专业向</strong></h2><h3 id="🔗-4-PublicPrompts-publicprompts-art">🔗 4. PublicPrompts [publicprompts.art]</h3><h4 id="✅-优点-4">✅ 优点</h4><ul><li><strong>精准参数化</strong>：提供负向提示词+采样步数+模型版本等全套配置</li><li><strong>风格全面</strong>：二次元/写实/拼贴艺术等200+分类</li><li><strong>开源免费</strong>：所有内容可商用无需署名</li></ul><h4 id="❌-缺点-4">❌ 缺点</h4><ul><li>网站两年未更新</li><li>无社区交流功能</li></ul><h4 id="🚀-推荐场景-4">🚀 推荐场景</h4><p>AIGC从业者的免费素材库</p><hr><h2 id="📚-Prompt学习体系化">📚 <strong>Prompt学习体系化</strong></h2><h3 id="🔗-5-LearningPrompt-learningprompt-wiki">🔗 5. LearningPrompt [learningprompt.wiki]</h3><h4 id="✅-优点-5">✅ 优点</h4><ul><li><strong>结构化教学</strong>：从零到精通的完整学习路径</li><li><strong>交互式练习</strong>：每章节附带实战演练沙盒</li><li><strong>中文本地化</strong>：针对中文语法特训</li></ul><h4 id="❌-缺点-5">❌ 缺点</h4><ul><li>缺少复杂工程案例</li><li>未适配移动端</li></ul><h4 id="🚀-推荐场景-5">🚀 推荐场景</h4><p>AI产品经理/技术写作者的底层能力训练营</p><hr><h2 id="🔍-同类推荐网站">🔍 同类推荐网站</h2><table><thead><tr><th>类型</th><th>推荐网站</th><th>亮点</th></tr></thead><tbody><tr><td><strong>ChatGPT</strong></td><td><a href="https://promptbase.com/">PromptBase</a></td><td>竞价交易市集/高价值商业提示词</td></tr><tr><td><strong>中文社区</strong></td><td><a href="https://prompt.boo.ai/">BooAI</a></td><td>按中文表达习惯优化提示逻辑</td></tr><tr><td><strong>艺术生成</strong></td><td><a href="https://openart.ai/">OpenArt</a></td><td>支持AI画廊风格检索</td></tr><tr><td><strong>学术研究</strong></td><td><a href="https://aigodlike.com/">AIGODLIKE</a></td><td>论文级参数调试指南</td></tr></tbody></table><hr><blockquote><p>💡 <strong>使用建议</strong>：搭配「1个学习站+1个工具站」组合，例如用LearningPrompt系统学习后，在FlowGPT寻找具体场景的解决方案。对于创意工作者，推荐PublicPrompts+PromptHero的跨平台组合拳。</p></blockquote>]]></content>
    
    
    <summary type="html">个神级AI提示词网站推荐 | 效率翻倍必备</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    
    <category term="AI提示词" scheme="https://lxttz.github.io/tags/AI%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>GitHub获取个人访问令牌（PAT）</title>
    <link href="https://lxttz.github.io/posts/671aa288.html"/>
    <id>https://lxttz.github.io/posts/671aa288.html</id>
    <published>2025-03-11T10:05:19.000Z</published>
    <updated>2025-03-11T10:07:13.772Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><h1>🔑 GitHub 获取个人访问令牌（PAT）全流程指南</h1><h2 id="🌐-1-登录-GitHub-账户">🌐 1. 登录 GitHub 账户</h2><ul><li>访问 <a href="https://github.com/">GitHub 官网</a></li><li>👉 点击右上角 “Sign in” 登录账户</li><li>🔒 推荐开启两步验证（<a href="https://github.com/settings/security">设置路径</a>）</li></ul><h2 id="⚙️-2-进入开发者设置">⚙️ 2. 进入开发者设置</h2><ol><li>点击右上角头像 → <strong>Settings</strong></li><li>左侧导航栏定位 → <strong>Developer settings</strong></li><li>选择 ▶️ <strong>Personal access tokens</strong> → <strong>Tokens (classic)</strong></li></ol><h2 id="🛠️-3-创建新令牌">🛠️ 3. 创建新令牌</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[开始] --&gt; B[命名令牌]</span><br><span class="line">    B --&gt; C[设置有效期]</span><br><span class="line">    C --&gt; D[配置权限]</span><br><span class="line">    D --&gt; E[生成令牌]</span><br></pre></td></tr></table></figure><h2 id="🔐-4-核心参数配置（带图标说明）">🔐 4. 核心参数配置（带图标说明）</h2><table><thead><tr><th>配置项</th><th>选项说明</th><th>推荐设置</th></tr></thead><tbody><tr><td><strong>🔖 名称</strong></td><td>识别用途的标识名称</td><td><code>gicnuo_2024PAT</code></td></tr><tr><td><strong>📅 有效期</strong></td><td>最长可设置365天</td><td>选择自定义日期</td></tr><tr><td><strong>📂 仓库权限</strong></td><td><code>repo</code>全库或指定库</td><td>✅ 全库访问</td></tr><tr><td><strong>👥 账户权限</strong></td><td><code>user</code>可操作账户设置</td><td>❌ 默认关闭</td></tr></tbody></table><h3 id="权限详细说明">权限详细说明</h3><ul><li><strong>repo</strong>（必选）<ul><li>✅ <code>repo:status</code></li><li>✅ <code>repo_deployment</code></li><li>✅ <code>public_repo</code>（公开库访问）</li></ul></li><li><strong>admin</strong>（高危操作）<ul><li>❗ <code>repo:delete</code>（删除仓库权限）</li><li>❗ <code>admin:org</code>（组织管理权限）</li></ul></li></ul><h2 id="⚠️-5-令牌安全警告">⚠️ 5. 令牌安全警告</h2><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- 生成后应立即保存至密码管理器！</span></span><br><span class="line"><span class="deletion">- 泄露的令牌可能导致账户被完全控制！</span></span><br><span class="line"><span class="addition">+ 建议使用1Password/Bitwarden等工具加密存储</span></span><br></pre></td></tr></table></figure><h2 id="📋-6-使用场景示例">📋 6. 使用场景示例</h2><table><thead><tr><th>使用场景</th><th>CLI命令示例</th><th>权限要求</th></tr></thead><tbody><tr><td>克隆私有库</td><td><code>git clone https://&lt;TOKEN&gt;@github.com/user/repo.git</code></td><td>repo</td></tr><tr><td>API调用</td><td><code>curl -H &quot;Authorization: Bearer &lt;TOKEN&gt;&quot; https://api.github.com/user</code></td><td>user</td></tr><tr><td>CI/CD集成</td><td>在GitHub Actions中设为<code>secrets.GH_TOKEN</code></td><td>repo + workflow</td></tr></tbody></table><h2 id="🔄-7-管理令牌方法">🔄 7. 管理令牌方法</h2><ol><li><strong>禁用令牌</strong>：开发者设置中点击令牌右侧的🔄按钮</li><li><strong>监控日志</strong>：<a href="https://github.com/settings/security-log">审计日志查看</a></li><li><strong>紧急撤销</strong>：进入页面立即点击❌撤销按钮</li></ol><blockquote><p>💡 TIPS：结合<a href="https://cli.github.com/">GitHub CLI</a> 使用更安全：<br><code>gh auth login --with-token &lt; mytoken.txt</code></p></blockquote><h2 id="流程图解全流程">流程图解全流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    用户-&gt;&gt;GitHub: 登录账户</span><br><span class="line">    用户-&gt;&gt;GitHub: 进入开发者设置</span><br><span class="line">    GitHub--&gt;&gt;用户: 显示PAT创建界面</span><br><span class="line">    用户-&gt;&gt;GitHub: 配置令牌参数</span><br><span class="line">    GitHub--&gt;&gt;用户: 生成加密令牌</span><br><span class="line">    用户-&gt;&gt;本地: 保存至安全位置</span><br></pre></td></tr></table></figure><p><strong><a href="#-github-%E8%8E%B7%E5%8F%96%E4%B8%AA%E4%BA%BA%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8Cpat%E5%85%A8%E6%B5%81%E7%A8%8B%E6%8C%87%E5%8D%97">⬆️ 返回顶部</a></strong><br><strong><a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens">📚 官方文档参考</a></strong></p><pre><code>&gt; ✨ 最佳实践建议：  &gt; - 为不同用途创建独立令牌（如`CI_PAT`/`API_PAT`）  &gt; - 定期使用[GitHub Token Scanner](https://github.com/github/token-scan)检查代码中的令牌泄露  &gt; - 企业用户建议使用[OAuth Apps](https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps)代替PAT</code></pre>]]></content>
    
    
    <summary type="html">GitHub获取个人访问令牌（PAT）</summary>
    
    
    
    <category term="GitHub技巧" scheme="https://lxttz.github.io/categories/GitHub%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="GitHub" scheme="https://lxttz.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>ai话术指南</title>
    <link href="https://lxttz.github.io/posts/5a4cdc93.html"/>
    <id>https://lxttz.github.io/posts/5a4cdc93.html</id>
    <published>2025-03-11T10:00:54.000Z</published>
    <updated>2025-03-19T10:11:30.706Z</updated>
    
    <content type="html"><![CDATA[<h1>ai话术</h1><h2 id="1-爬取网址内容">1.爬取网址内容</h2><p>网址+将该网页的内容拷贝下来，整理总结最后以markdown的文件格式输出</p><h2 id="2-梳理内容笔记">2.梳理内容笔记</h2><p>整理以上最后以markdown的文件格式输出，加上每一给平台的网址，标题加上一些小图标</p><h2 id="3-写某一方面的笔记">3.写某一方面的笔记</h2><p>给我写一份XXX的详细笔记，从0到1，越详细越好，最后以markdown的格式输出，简单通俗易懂，标题前加上一些小图标</p>]]></content>
    
    
    <summary type="html">ai话术指南</summary>
    
    
    
    <category term="ai" scheme="https://lxttz.github.io/categories/ai/"/>
    
    
    <category term="ai话术" scheme="https://lxttz.github.io/tags/ai%E8%AF%9D%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>免费好用的网站托管平台全面对比</title>
    <link href="https://lxttz.github.io/posts/78b95e04.html"/>
    <id>https://lxttz.github.io/posts/78b95e04.html</id>
    <published>2025-03-11T09:57:02.000Z</published>
    <updated>2025-03-11T09:59:23.186Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><h1>🌐 免费好用的静态网页托管平台全面对比介绍</h1><h2 id="🚀-5大免费静态托管平台对比（附官方链接）">🚀 5大免费静态托管平台对比（附官方链接）</h2><h3 id="1-GitHub-Pages-🐙-→-官网">1. GitHub Pages 🐙 <a href="https://pages.github.com/">→ 官网</a></h3><ul><li><strong>特点优势</strong><br><img src="https://img.shields.io/badge/-%E6%8E%A8%E8%8D%90%E7%BB%99%E5%BC%80%E5%8F%91%E8%80%85-blue?logo=github" alt="GitHub Pages"><ul><li>完全免费，无需信用卡</li><li>直接与GitHub仓库关联</li><li>支持自定义域名+HTTPS</li><li>托管地址：<code>username.github.io</code></li></ul></li></ul><h3 id="2-Netlify-🚀-→-官网">2. Netlify 🚀 <a href="https://www.netlify.com/">→ 官网</a></h3><ul><li><strong>创新功能</strong><br><img src="https://img.shields.io/badge/-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2-green?logo=netlify" alt="Netlify"><ul><li>全球50+CDN节点</li><li>免费Serverless函数</li><li>即时预览部署</li><li>特色功能：表单处理、A/B测试</li></ul></li></ul><h3 id="3-Vercel-⚡-→-官网">3. Vercel ⚡ <a href="https://vercel.com/">→ 官网</a></h3><ul><li><strong>框架优化</strong><br><img src="https://img.shields.io/badge/-%E5%89%8D%E7%AB%AF%E9%A6%96%E9%80%89-purple?logo=vercel" alt="Vercel"><ul><li>Next.js官方推荐</li><li>边缘网络渲染(Edge Network)</li><li>实时协作部署</li><li>测试地址：<code>project-name.vercel.app</code></li></ul></li></ul><h3 id="4-Cloudflare-Pages-🛡️-→-官网">4. Cloudflare Pages 🛡️ <a href="https://pages.cloudflare.com/">→ 官网</a></h3><ul><li><strong>安全加速</strong><br><img src="https://img.shields.io/badge/-%E5%85%A8%E7%90%83%E8%A6%86%E7%9B%96-orange?logo=cloudflare" alt="Cloudflare"><ul><li>250+全球CDN节点</li><li>免费DDoS防护</li><li>Workers脚本支持</li><li>特色：无限带宽+无限请求</li></ul></li></ul><h3 id="5-Firebase-Hosting-🔥-→-官网">5. Firebase Hosting 🔥 <a href="https://firebase.google.com/products/hosting">→ 官网</a></h3><ul><li><strong>全栈生态</strong><br><img src="https://img.shields.io/badge/-%E8%B0%B7%E6%AD%8C%E7%94%9F%E6%80%81-red?logo=firebase" alt="Firebase"><ul><li>深度整合数据库/认证</li><li>实时数据更新</li><li>全球Google CDN</li><li>部署命令：<code>firebase deploy</code></li></ul></li></ul><h2 id="📊-关键参数对比表">📊 关键参数对比表</h2><table><thead><tr><th>平台</th><th>免费CDN节点</th><th>国内访问优化</th><th>特色功能</th><th>部署速度</th></tr></thead><tbody><tr><td>GitHub Pages</td><td>🌍 12</td><td>❌</td><td>开源整合</td><td>⏱️ 中</td></tr><tr><td>Netlify</td><td>🌐 58+</td><td>✔️</td><td>表单处理+自动化</td><td>⚡ 快</td></tr><tr><td>Vercel</td><td>⚡ 30+</td><td>✔️</td><td>边缘渲染+预览环境</td><td>🚀 极快</td></tr><tr><td>Cloudflare Pages</td><td>🌎 250+</td><td>⚠️ 波动</td><td>DDoS防护+Workers</td><td>🌩️ 快</td></tr><tr><td>Firebase Hosting</td><td>🔥 70+</td><td>❌</td><td>实时数据库整合</td><td>⏳ 中等</td></tr></tbody></table><h2 id="🛠️-部署流程示意图">🛠️ 部署流程示意图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[选择平台] --&gt; B&#123;是否需要框架?&#125;</span><br><span class="line">    B --&gt;|是| C[Vercel/Netlify]</span><br><span class="line">    B --&gt;|否| D[GitHub Pages]</span><br><span class="line">    C --&gt; E[连接Git仓库]</span><br><span class="line">    D --&gt; F[上传代码]</span><br><span class="line">    E --&gt; G[自动部署]</span><br><span class="line">    F --&gt; H[手动部署]</span><br></pre></td></tr></table></figure><h2 id="💡-选择建议">💡 选择建议</h2><ul><li><strong>个人博客/文档</strong> → GitHub Pages</li><li><strong>企业官网</strong> → Cloudflare Pages</li><li><strong>前端框架项目</strong> → Vercel</li><li><strong>全栈应用</strong> → Firebase</li><li><strong>自动化需求</strong> → Netlify</li></ul><blockquote><p>📌 注意：国内用户推荐搭配<a href="https://www.aliyun.com/">阿里云</a>或<a href="https://cloud.tencent.com/">腾讯云</a>CDN加速使用</p></blockquote><p>附：<a href="https://web.dev/performance-scoring/">完整测试报告</a> | <a href="https://www.cdnplanet.com/">全球CDN节点查询</a></p><pre><code></code></pre>]]></content>
    
    
    <summary type="html">免费好用的网站托管平台全面对比</summary>
    
    
    
    <category term="博客" scheme="https://lxttz.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="网站托管平台" scheme="https://lxttz.github.io/tags/%E7%BD%91%E7%AB%99%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Trae-CN的入门笔记</title>
    <link href="https://lxttz.github.io/posts/a4c8ee63.html"/>
    <id>https://lxttz.github.io/posts/a4c8ee63.html</id>
    <published>2025-03-10T14:34:44.000Z</published>
    <updated>2025-03-10T14:46:17.420Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Trae 使用文档</span></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 本文档基于 [<span class="string">Trae 官方文档</span>](<span class="link">https://docs.trae.com.cn/docs/what-is-trae?_lang=zh</span>) 整理</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 什么是 Trae ?</span></span><br><span class="line"></span><br><span class="line">（描述 Trae 的核心功能，例如：轻量级 HTTP 客户端、特性亮点等）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 主要特性</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 🚀 简洁易用的 API 设计</span><br><span class="line"><span class="bullet">-</span> 🔧 请求/响应拦截器</span><br><span class="line"><span class="bullet">-</span> ⚡ 自动转换 JSON 数据</span><br><span class="line"><span class="bullet">-</span> 🔒 支持 TypeScript 类型推断</span><br><span class="line"><span class="bullet">-</span> 🌐 浏览器与 Node.js 双环境支持</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 安装方式</span></span><br><span class="line"></span><br><span class="line"><span class="section">### NPM</span></span><br><span class="line"><span class="code">```bash</span></span><br><span class="line"><span class="code">npm install trae</span></span><br></pre></td></tr></table></figure><h3 id="CDN">CDN</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/trae/dist/trae.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="快速入门">快速入门</h2><h3 id="创建实例">创建实例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> trae <span class="keyword">from</span> <span class="string">&#x27;trae&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api = trae.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseUrl</span>: <span class="string">&#x27;https://api.example.com/v1&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="发起请求">发起请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GET 请求</span></span><br><span class="line">api.<span class="title function_">get</span>(<span class="string">&#x27;/users&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br><span class="line"></span><br><span class="line"><span class="comment">// POST 请求</span></span><br><span class="line">api.<span class="title function_">post</span>(<span class="string">&#x27;/users&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">28</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="API-参考">API 参考</h2><h3 id="请求方法">请求方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">trae.<span class="title function_">get</span>(url[, config])</span><br><span class="line">trae.<span class="title function_">post</span>(url, data[, config])</span><br><span class="line">trae.<span class="title function_">put</span>(url, data[, config])</span><br><span class="line">trae.<span class="title function_">delete</span>(url[, config])</span><br></pre></td></tr></table></figure><h3 id="配置项">配置项</h3><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>baseUrl</code></td><td>string</td><td><code>''</code></td><td>基础请求路径</td></tr><tr><td><code>headers</code></td><td>object</td><td><code>&#123;&#125;</code></td><td>自定义请求头</td></tr><tr><td><code>timeout</code></td><td>number</td><td><code>0</code></td><td>请求超时时间</td></tr></tbody></table><h2 id="拦截器">拦截器</h2><h3 id="请求拦截">请求拦截</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">before</span>(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">  request.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">&#x27;Bearer token&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> request;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="响应拦截">响应拦截</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">after</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received response:&#x27;</span>, response);</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="错误处理">错误处理</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">get</span>(<span class="string">&#x27;/error-endpoint&#x27;</span>)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">response</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务器响应错误:&#x27;</span>, error.<span class="property">status</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求未发出:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h2 id="常见问题">常见问题</h2><h3 id="如何取消请求？">如何取消请求？</h3><p>（解决方案说明）</p><h2 id="版本日志">版本日志</h2><ul><li><strong>v1.0.0</strong> (2023-01-01)<ul><li>初始版本发布</li></ul></li></ul><pre><code>---如需提供更准确的内容，请分享原始文档文本内容，我将帮助进行结构化转换。</code></pre>]]></content>
    
    
    <summary type="html">Trae-CN的入门笔记，描述 Trae 的核心功能，例如：轻量级 HTTP 客户端、特性亮点等</summary>
    
    
    
    <category term="ai编码" scheme="https://lxttz.github.io/categories/ai%E7%BC%96%E7%A0%81/"/>
    
    
    <category term="Trae" scheme="https://lxttz.github.io/tags/Trae/"/>
    
  </entry>
  
  <entry>
    <title>springboot部署的问题</title>
    <link href="https://lxttz.github.io/posts/a8a2f7d9.html"/>
    <id>https://lxttz.github.io/posts/a8a2f7d9.html</id>
    <published>2025-03-05T06:15:23.000Z</published>
    <updated>2025-03-10T06:25:04.225Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0711ed4248488eceeb6904dccfab71453f9f9ed3c7f45e853f44faa9239b55c8">a225aaeba5e546997ae504eef50c65098cfaf87e21dc646b884b2732baa4a48041e58e0e9400582ce53dae2a4c9b74e1e14e9f5eafdb0fa96b8c20b1da8401ced4d5928e3f008e68be32ac8789fc89b614a44063cea93332a0a9df57b10732930204f8d909cccf1bf1dcc1ae4a30d4dee4d738886cc11e6ea2002a608be0d11c53baec3dbc71a992fe590d1f59da6a990b863730853639f5a028483b2478010655c3bd1ef662d242c04e1ef82e46855bab5540f8714d0879a9c9f69d1424ec9c2f47b68ca61410a6f0f65daa1c2596b3202a9031ffccff3a886b5642e82074c78954443063b8ec5f0b102859894b22be7f2cbdd39bd569f320e337b29f9a92ecc86b149fe0cc56434fdf70ab7584b8baeec75ababe711365ee289d5655b9f290ac0f0874941188d732f80ee6827060f92904f94d719329f1b4a4be5f55a7d9fd371c4d814840b151f2ac50f29a859fee01801b96865da759d89ea3d5fde1296167fa943cac752d8db68ea30fba9d7aacbdd0b6c9e247a02cf738d9174a35cd123262430e07ad90a0fd5c81681c78e3630ddc0fb5d8649561e6dd0420fbb5229eb680e6fb48115daed56286f2b02bd4160eea76dafca65d6ccc1da44fb874a0ee5408cdc27604edaab0fa7863a92edb60314ba79d1c72f8c8206097107aadf3442cd0ba0db5339a2e087ac3cf798182c3bcbea14f1b80af827b818b4f40f5b2700161c213a87e0b83968a5632b9c82465241dd23bf32ede266d96e2bc5bd56d1e49845c03c0ff3e3846b953217d5e3b49bd783473fa3b46b2c5be49f766fa93283e6e038b4144bef3897df01873ca37fd5bc37da9fa573d858663d979676c9a79ba122a260428e3468a7e697995853ed83179b95dad0dde676dfee89b64ee66717bc117c932989d8ec096507619802c2afc4714e8af257587fdf6d9d175318af2227c306eb731bd65ea3ff02bd203393733e0d37b304868a996dea3f4074537a2a9c239d431c898937d3d1dd6c58587d450032a500d31c42aa44a56712c79b85323b1328c08d70b404cd2c7ef101aa053d666a3d0e764345c88ff8aa5a89e4b4f67147b250c49ffdf81dbb2c5938b4e2f172b5070d71e2ac98cbc55ff40c2d88b68023b8fea5c17362beb4a8c79c8bd5736e8b49d29fd09e7c0697ab9d5e71194643f28be9c8fa66066a82033882ec24d527439b8bad46136779f10d1da48d464b33ec2d4126a2cba0cc61293486950bb536174b36413c01be65dc2faef8740ea04da8e0bf0aaef1c58dcce39a17af8fe50928aac0ba552d496218dfdf3c1983d9367d522be1c04b108a03e0aee9d9119c958016d87cd868d6375adaf284b18542e2708c904c94e3fdbfbb9a30883b5381aefe85027f43884006fd5f3e539b99e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">springboot部署的问题，需要密码才能进入!</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">springboot部署的问题</summary>
    
    
    
    <category term="专升本" scheme="https://lxttz.github.io/categories/%E4%B8%93%E5%8D%87%E6%9C%AC/"/>
    
    
    <category term="专升本自我介绍" scheme="https://lxttz.github.io/tags/%E4%B8%93%E5%8D%87%E6%9C%AC%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>vue神秘的代码</title>
    <link href="https://lxttz.github.io/posts/662a14d2.html"/>
    <id>https://lxttz.github.io/posts/662a14d2.html</id>
    <published>2025-03-01T07:24:07.000Z</published>
    <updated>2025-03-14T14:02:24.347Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="36a45234d83bcced694818a7944d99c761d2af0812408e477315ff13f06c506d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">vue神秘的代码哦，需要密码才能进入!</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">vue神秘的代码</summary>
    
    
    
    <category term="课程" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="个人" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/%E4%B8%AA%E4%BA%BA/"/>
    
    
    <category term="专升本自我介绍" scheme="https://lxttz.github.io/tags/%E4%B8%93%E5%8D%87%E6%9C%AC%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>Java神秘的程序</title>
    <link href="https://lxttz.github.io/posts/4e140152.html"/>
    <id>https://lxttz.github.io/posts/4e140152.html</id>
    <published>2025-03-01T07:19:55.000Z</published>
    <updated>2025-03-10T06:25:00.982Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9983e0e8cc6ff431a73d9300e0d1513ecd7f315d0edf2ba5151dc8080678d554">a225aaeba5e546997ae504eef50c65096227d8ca74c841568f7bd6e3c5f8178a88d5d786ea7fdf7e722f32d4d2a83ed15cbb96cc8e1a881367d32b190f8c39a744d53c7add211a43a319845bfd5228598f2140f09b56ead63100efdbaa841df16c45db00ba4fb821ce30cde0b0cac2cfa291ca02da72fa7956b77c5c23593a0365b6b0a24dd5e2dbb1de7324175d6f670e196630ffd61ddb478a77ed032424510fa18289500cca957e6d08c6fef3584e2d9e1363276f47a39e53759b148f64b1165d9f8608662194d8ec858a838645c60f72efba3866632bbd995ba4684ab20147fcf04d3a7715878b922c6ec731c043c0ddf61362c90b947bb67c74023286d10b776ef760396ea32eb313c052ab37f7f1673a7a8ebdab72d2a541b99282991141e216132fce287b1125cfee941891c95e7a2bdbfa1e937245186432d81e641230c5e8014dae64fee9a8f1f7dea51c5e1d8bf9c4a0baaf75452c2786ef141f3115fbd2bc11bc972f1cfe21dc7b631eda93f676efc2ea3ce1ec262dd3b0b9937819efe44d561bc322d18acb0b74f0f8fb389d0bc14986f3f25969397652c063ec3eb1a4363834f3980a13a04fcaa077508ff986131ad254f1ebf09f6d88f74026632da12f1a67a89eb69d49efd1f1f8d4440dec7f4e8adbcb25a8a147c5c7608ea867bbbcbfd40305dfb3b51a1a623824a403e1bae43368a4b683440bd564fa2f6c5ec395cd422479820dd62941f2e05294d7b12819df3527321aca49ee2ff95f19e39d5ff1b4f7cbae770e6e9fef24a8c346cbbea04ec2c5bbf8e433422d60ab29ba1a630ffe86f50c75861d0de5b10849014e70ddd0cea6aeb73951951e9818e89c059d958c5656f733223124e5101eee58e06da7d44d4ec8be1c0a493205d2a7b53456774f2cee1c5a2ce1dbb46e6047c10f21108c0b725632006debca2a2a24a386d8597706f163df91147909a100ca5c0f00eb05bf9f8d108712ec57b8a06f28a409d33c65936ba23f4d2489946bef270a4d98240ed6b7ed76cf3693dd3c7d8c41935dad62799e5acfc4830c0c381faa81ec6ca3023b7ba50bfea34806d35d6cf94ba5f06b75a574a6926dacb632ec1bc4a8d5efe08048087d39112f11df28491d8ed7f68373e396e41497c1744a4b7ad6732cfbc7b0512a16596dd36633c8997884d38999a33ca3e1ef3577f813e53873fd892c03f11c96db2ff43918e041184c4b06c074a9fa5ccff0a9cd956346aacf03cc3c1400b6b6c75cb27006aa0e9633d3a87a6d839b33957755fad367d9575d6a42ed70422678a786fd5dfd2264ed4c84ff3ce52075654a0288e841cc34dd0204550ac2e4e08c51972bbd2d8b08911e77800f2fbc53d3225e9bb5897b6ce912423bcb44203e2266c9aefdc7ec80c34d76a9daaaa3dad93e6dfdf6c9c8585b687bb76b6a5f2e8729df15ac1788a24ac25ec4e915b260a721a85e1b489a53b9a38542a6a0f9ee61fe297e46ba80e37a89043d69a22fcee9c6da52e3362cff20f8ff787c1016a642a7b6db1084844ec5fcaeca60ba00a7c13d2592e96380a2949d8024a3e79329aa2870121cee040d5cc0048247a6456228cb5c9d03e8552d6f64e4a1616d2883634d5abdef5d544b561ae0358ca0d29b3ac4a1bea5f39c7a1d7d6ad185cd93f2ab2448bc4666ce0f337524428489116b46d9105f84359b159ffe1ca796f864cb87bead3b15ca6fb6195fe87d90dc9e4e4a25375dbd0182d3bc4dbd8b16af0083771582d00db41586db3e58619e9fd2b1eb5a4b6c0fa1da37d57c15819b6fb4b25e9db258c05db994da81be5a8dbb233f95a2bc3e942bddfc25ac927ef857af988afe615e99456be861edf95ae817007ff7d94a830e5d52e390fed8a5ec894a9a87ee85d31cd61c93e2630111bbf6426e35d50f69badbae5566f2ec8eab3702ed7ae2463569f916192ad1aa4af76afd24fec3ccf9807d482c731a380375e0950573ff525d41df0e88cb45613a6c63afea48dd44c579e2b1f57a4f50d17cdbfe9ff34441fb0f9fb8a564e496a48288a25f62cb684b33b141d52aa9b7819729b200a1b746b064f7dd81d76467b324553814a1523f4eb7167025cad1d9dd526208acd8e9ae1245a88fdc62a6f06f2fbc231cbbd4d1811f2c02dffd9aa92f170a22ebf326afee0794061e79b807df3d7be71d48ad71e32f711bd8848108f231e7b53fbb8f821e430e7d97c09a17821c1b4fbbccb889ea69221a77052db7c22863944eace132fa17a244db8f8528d5526e3ec9c80ef8008face7a71395fcf8d9a5ba86c12d83219673d73ce5184cbc3130eec3994e03b33c599b6a71efd698b40826ee2c74956568cc77d403a39100e0449876010b81ab3fa007370896baf180c135cd53ba7b459ab85b9deff30ddafb2a6376ddc1499d1696260188b5f6256f886acb0add2773a03293900ad462d274b05df6bc221b17f16fd2865c064c85306d1518f6253d402fec63641bec5f65442ce7c19f43c2dcf695cb82ab34c136b9f661415657e37009c52061eb85acd6b2096401660fd98ed73ca3a6e00620be0137d8839d8bb34dac35e00302d23dff079fb43aa927a9e9278c168e29c204138931f1e684d9d4da10a8041a333a2fe950a5b860d4a055e47533eca8ba649b681c7a459331f93d30ee7bb68ca281751a8d77007de015fdeac2eb276e8babb74dc78f9b3f8f58ae8b5c45e725d14cfdc372392eae0330ef7eaad1ce6b54b15cc00544a6e9ab6024b44b4d45b711b958bbdf5120d41cac9b2e92f1bec7f7f9c66cc2dcc2cc4cb5f23a440d11c35ee00087f950d5c92dd3919da8804d0cbafa0e3d2414f398acd5e73b674bb8ec43a2962c55340f086d834f4800fee1ea375544ded8c579af230ad393a6c6a242098c5bbc7d2e09128eade3d52cd148a26a527ebe8407b15ad996bde5b6e5fe576f6c873e85fb7e31b465056da520f70fdae40a403a7952e620956b9c884915e2fe3e043fe2807281c86b683fe3ff52150a505ddf5ad51137269d1efec52ffcece121ff8595723b28e745676b37a5842fbd23fd69f9c69956d93703689678e38c8b04b3bf1020bce540070927b14c73afbd68f17e08f381052b48300aea65eeb6d0c544ec8d0f94032caeb8b7c651983c00871993f2c972aa8781c158a060e34ee626578d566b3b0d2e54c82a05428ce1621c1ce29885e4b3f3d55d321f0efed43cd478d96c5f5ee898158fe24775e4524dbd867376d4a3502f547b539141e84829f045313c4c740b04190fd5e11a0a0057efb59cf6a63e0a0bd3d6d837d1ab5594f096647fd8fa125fb088dd40fb5de1627d0ae5839c50efecc0a6d647a0dfae9d3913b6647e20f3e38825e0aa8642932aff0b256e370e2861378a3cf628437a358ecbada58ce3d886d0bc4ce5b4131b84e5522a421fc44878513f845265b58768b2ffc0e734455accd733d441ef7934006db8783955e32193cc07ccac400fae2d2bc75139546717a09e94dba89df0d8bb7f0d248f4861c86f75977990a9d4937fcd80e1c36250a074d4bfdc4a6f51e5103d19bbd2e35dc0082244b068ae1b406a63ce1d388b149f0ef6023d8ac7ff69254f6de2a71fab7cb51244595a1f58a3192743c766f701e1526c746e85a70dc16fcae09ac09f6d51989c721f1944b733bbdea1465b5144af53d309d8c5d0a009e3fe396e1091a88a23359b53de571eae398ce3cc97a470bc1dcf61242f7b624539dba6ce5a118b902a2c633e1ffca8e1e147151b4b24050e5ae3c728ee49a7a487e73f6d729c8be2713f9d6de5a2c396b00324a80bd389690a5c8ed9818f0518a9bee89f043d7d97934d14be86f671a473c31636df10156375a24d323f87f09698a2d5bcc4694d49b8c18c03b31ecbe39db1b6fc5b3ebeeb5983cb674a34323b3c37a0392f9f532b71a9c9377e16d17edfc2585ea2252aa8d707074941db3a440a09bf66d5196081951aea35ef87512d76c3068b2e605bdcac915f0abae4ddc7a0596f1663015cc9c25027ccfc8ba64c57b100d16283e4077f770cd355db84caabb1f5e0cbbde0d8126f431a8ad4329740a86bb7fde8916c5526f96df4ed8ce442d76c72fa15783509f8775e5e8981331877d66f3f02c600dc0ee77680aa09183b55b3f7e806aa28fff28b07f2e695394c86114efc36fd23d07ce06a666c7ebc561fdbb29cd1c9f8d4284a903969734ec9487e560bcd7489a263d8479353fffb8fcc2c519ada15f66133293b82b8f5e04c038c0ba5ef5bf890d058fa7c7b6b70f677b25278f35973ddcede138f5529778a33f0cdcc95925dc886e6e88616e4e8130932a3d6bd4fa0320f33d1a72ea50c0ab20280e087f231ee00bf0436dbaf4dc785909ccb7e5b5ef42cd8e728e6c9844b2f7e38bef0842bbdba67549907fc202641f41cd212bda4091e81e49e57e2c8b48227edcc6cb69affd09754a13d6c354d1ae5b50cbb53babe67afec1cb17ddbae548d965da4fa9db82c32a7d7a27461c0758b2ca9f0f023907a2adfd12ab3ec908f6afc4eedfd8b19430011e27c7ca32564e30aaf5ca304db2692866e6f91971403366ee3e3a328674f5bea6fc6cbc88bb88331557ba7b8b61d611bb58ca1ed4ceda053bb3613db5d8693b49f4a7438e6adf122fcae2d77e78023423870b0fbff6d618456c600320fc17337b780f683c2483dc1e67daca60808c86b5c2ae5a6975b1a3e68dcd4bf2d14b87986549051c5261bc78d087ddeafb5f7385992a08913a75f0b5ec6ed6db060fb684bc9b1b7219d676f6f7fcde095290db216754834fd70ffc857aa8f3704d2d3c15b4efa41b73998d4570eb5d5d399926d3f5eb2ce03dbb22b270a9c429da83125a07bbc882a75bb8c9561ba62cfe2d80ac95ff03b5f50e5200a3721adb31d8ccb4ca0ff537942df6ddd7cac49c7389b22f719ee6dc781b9979ce70aee2d4f3bc275a453a92803be377b9c675c5ffa4e50e53bd71ab4d7e30c9a96cb25f44c6eb6262e2db3c88a227070486a3cf234e53887f5edbbc566620b9edee6078626ae048ce9c2a2efa2b13cf590c87530cd8c3f2ebaf0e0163516eb218c60b459037c5b9b51060edac5ecdeae72117e1281d76e257d43a5afe429620aaa100eb88a1d64976bcf4fb7b9240035524a8b1394f870707a698c1a50d2e0899561c892d9d5aa8900ff660fe1a1733831bc5b3fee24fd9a75a84e5ceeb52bda63da81cca377386a1cd4f9bc7b5e9152ca43e05ffbaab6bc31b6615f0a923272096a92b40b69d3eaf2aed83cb3a04c72fc67673cc56d39d6808274523da5b86667a40056574f15ec5c563af07bdb43d102eb92d6dd81dc3dff15c691b451af8057d60110ddcf2dc731da9111e4d0c44df2efc6cbd80d747aa908e5bfe3169ca02f0c6cf0e04c2c4297ed12e634787d9e50e609d146e864a52e661b4411bd5a0c02ff1ed39e8a3afcd28d07bce396260f381d4fc744b33bb6de633319a32f603e41f723094d56e07e1494e83201a350f2994d995269b2eef1f2247ab9e458a41a23ca4f83845c89903e1d27b0fefb7bd16b36d469b59358164c5bbd7114f4362d5b2850374c26b36a1062</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">神秘的代码哦，需要密码才能进入!</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java神秘的程序</summary>
    
    
    
    <category term="课程" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="个人" scheme="https://lxttz.github.io/categories/%E8%AF%BE%E7%A8%8B/%E4%B8%AA%E4%BA%BA/"/>
    
    
    <category term="专科专业课程" scheme="https://lxttz.github.io/tags/%E4%B8%93%E7%A7%91%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第五章数组和广义表</title>
    <link href="https://lxttz.github.io/posts/a5ff5616.html"/>
    <id>https://lxttz.github.io/posts/a5ff5616.html</id>
    <published>2025-02-28T06:06:11.000Z</published>
    <updated>2025-02-28T06:18:08.905Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🧮 第五章：数组与广义表 · 从青铜到王者养成指南</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🌟 一、数组：整齐划一的「数据方阵」</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 1.1 🧱 数组基础认知</span></span><br><span class="line">![<span class="string">数组结构示意图</span>](<span class="link">https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b28d7c3f7ac4f4a857b1c5c15dcb0a7~tplv-k3u1fbpfcp-zoom-1.image</span>)</span><br><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">int classroom[5] = &#123;85,92,78,90,88&#125;; // 典型的「数组宿舍楼」</span></span><br></pre></td></tr></table></figure><h4 id="📌-核心特点">📌 核心特点</h4><table><thead><tr><th>特点</th><th>解读</th></tr></thead><tbody><tr><td>🔒 <strong>同质化</strong></td><td>所有「房间」住同类型数据</td></tr><tr><td>🚌 <strong>连续存储</strong></td><td>内存地址连续（门牌号相邻）</td></tr><tr><td>🎯 <strong>随机访问</strong></td><td>通过下标可直接定位到具体元素</td></tr></tbody></table><h3 id="1-2-🏗️-高维数组建模秘籍">1.2 🏗️ 高维数组建模秘籍</h3><h4 id="🔢-二维数组地址计算（行优先）">🔢 二维数组地址计算（行优先）</h4><p>★ <strong>公式密码</strong>：<code>Loc(A[i][j]) = Loc(A[0][0]) + (i*n + j)*size</code><br>假设5x4矩阵中每个元素占4字节：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算A[2][3]地址（起始地址200）</span></span><br><span class="line">地址 = <span class="number">200</span> + (<span class="number">2</span>*<span class="number">4</span> + <span class="number">3</span>)*<span class="number">4</span> = <span class="number">200</span> + <span class="number">11</span>*<span class="number">4</span> = <span class="number">244</span> ✔️</span><br></pre></td></tr></table></figure><h4 id="🗺️-存储策略对比">🗺️ 存储策略对比</h4><table><thead><tr><th>策略</th><th>存储方式</th><th>适用场景</th></tr></thead><tbody><tr><td>行优先存储</td><td>按行展开(类似读书顺序)</td><td>C/C++、Python</td></tr><tr><td>列优先存储</td><td>先排完一列再下一列</td><td>Fortran语言</td></tr></tbody></table><h3 id="1-3-🦸♂️-特殊矩阵的「瘦身术」">1.3 🦸♂️ 特殊矩阵的「瘦身术」</h3><h4 id="🔀-对称矩阵压缩">🔀 对称矩阵压缩</h4><p>只需存储对角线及一侧元素：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原矩阵：      存储数组：</span><br><span class="line">1<span class="number"> 2 </span>3      <span class="number"> 1 </span></span><br><span class="line">2<span class="number"> 4 </span>5 ➔    <span class="number"> 2 </span>4 </span><br><span class="line">3<span class="number"> 5 </span>6      <span class="number"> 3 </span>5 6</span><br></pre></td></tr></table></figure><h4 id="🌲-稀疏矩阵的三元组表示">🌲 稀疏矩阵的三元组表示</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triple</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> row;</span><br><span class="line">    <span class="type">int</span> col;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 存储非零元素坐标和值</span></span><br></pre></td></tr></table></figure><h2 id="🌌-二、广义表：会「变身术」的数据魔法师">🌌 二、广义表：会「变身术」的数据魔法师</h2><h3 id="2-1-✨-魔法特性">2.1 ✨ 魔法特性</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(莫比乌斯环, (递归, (套娃)), <span class="number">42</span>) <span class="comment">; Lisp风格的广义表</span></span><br></pre></td></tr></table></figure><ul><li>🌀 <strong>魔法元素</strong>：可以是原子（基本数据项）或子表</li><li>🎭 <strong>形态自由</strong>：支持空表、嵌套、递归结构</li><li>🕳️ <strong>深度定义</strong>：嵌套层数（原子深度为0，空表情深度为1）</li></ul><h3 id="2-2-🌀-结构解密">2.2 🌀 结构解密</h3><h4 id="头尾表示法-vs-层次表示法">头尾表示法 vs 层次表示法</h4><p><img src="https://img-blog.csdnimg.cn/20201119194708325.png" alt="广义表示例图"></p><h4 id="终极挑战：计算深度">终极挑战：计算深度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算广义表 L=(a,(b,(c,d)),e) 的深度</span></span><br><span class="line"><span class="number">1.</span> a → 深度<span class="number">0</span>（原子）</span><br><span class="line"><span class="number">2.</span> (b,(c,d)) → 分解后得到(c,d)，深入一层 → 总深度 <span class="number">2</span>+<span class="number">1</span>=<span class="number">3</span> ✔️</span><br></pre></td></tr></table></figure><h3 id="2-3-🔧-核心操作工具箱">2.3 🔧 核心操作工具箱</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 伪代码示例：取表头和表尾</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GList</span> &#123;</span><br><span class="line">    Object head;   <span class="comment">// 可能是原子或子表</span></span><br><span class="line">    GList tail;    <span class="comment">// 剩余部分构成的新广义表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="📊-三、考古现场：数组-vs-广义表">📊 三、考古现场：数组 vs 广义表</h2><table><thead><tr><th>对比维度</th><th>数组</th><th>广义表</th><th>战场解析</th></tr></thead><tbody><tr><td>🔢 <strong>元素类型</strong></td><td>严格统一</td><td>混合类型自由搭配</td><td>广义表更灵活</td></tr><tr><td>🧠 <strong>存储结构</strong></td><td>线性的物理连续</td><td>递归的逻辑链接</td><td>数组访问更快</td></tr><tr><td>🚀 <strong>操作效率</strong></td><td>删改耗时O(n)</td><td>动态操作更高效</td><td>各有适用场景</td></tr><tr><td>🎮 <strong>典型应用</strong></td><td>图像处理、矩阵运算</td><td>人工智能、语法分析</td><td>领域分工明确</td></tr></tbody></table><h2 id="🧩-四、思维导图脑暴中心">🧩 四、思维导图脑暴中心</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mindmap</span><br><span class="line">  root((高阶数据结构))</span><br><span class="line">    数组--&gt; 特点[&quot;🔑 同质 | 连续 | 随机访问&quot;]</span><br><span class="line">    数组--&gt; 分类[&quot;📦 一维 → 多维 → 特殊矩阵&quot;]</span><br><span class="line">    数组--&gt; 操作[&quot;⚡ 查改O(1) | 插删O(n)&quot;]</span><br><span class="line">    广义表--&gt; 特性[&quot;🌀 递归 | 嵌套 | 灵活结构&quot;]</span><br><span class="line">    广义表--&gt; 表示法[&quot;🔖 头尾 ↔ 层级&quot;]</span><br><span class="line">    广义表--&gt; 魔法操作[&quot;🎩 取头/尾 | 求深度&quot;]</span><br><span class="line">    应用场景--&gt; 数组应用[&quot;📷 图像存储 | 矩阵运算&quot;]</span><br><span class="line">    应用场景--&gt; 广义表应用[&quot;🤖 AI决策树 | 编译器解析&quot;]</span><br></pre></td></tr></table></figure><h2 id="💡-学习效果自测（含答案）">💡 学习效果自测（含答案）</h2><ol><li><p><strong>二维数组A[8][10]采用行优先存储，首地址200，每个元素占4字节，求A[3][5]地址？</strong><br>➔ 展开计算：200 + (3*10 +5)<em>4 = 200 + 35</em>4 = 340 ✅</p></li><li><p><strong>广义表L=((a,b), (c,(d,e)))的深度是多少？</strong><br>➔ 最深层是(d,e)所在位置：深度为3 ✅</p></li><li><p><strong>对对称矩阵进行压缩存储的目的是什么？</strong><br>➔ 节省存储空间 + 提升访问效率 ✅</p></li></ol><p>🌟 提示：尝试用不同编程语言实现广义表的基础操作，能加深理解哦！</p><pre><code>---✨ **学习锦囊**：建议配合可视化工具（如Data Structure Visualizations网站）观察数组和广义表的动态操作过程，理论结合实践效果更佳！</code></pre>]]></content>
    
    
    <summary type="html">数据结构第五章数组和广义表</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数组" scheme="https://lxttz.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="广义表" scheme="https://lxttz.github.io/tags/%E5%B9%BF%E4%B9%89%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第四章串</title>
    <link href="https://lxttz.github.io/posts/3b81ea37.html"/>
    <id>https://lxttz.github.io/posts/3b81ea37.html</id>
    <published>2025-02-28T03:08:58.000Z</published>
    <updated>2025-02-28T03:18:46.791Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 📜 第四章 串（String）</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🌟 基本概念</span></span><br><span class="line"><span class="section">### 🎯 串是什么？</span></span><br><span class="line">🔹 <span class="strong">**定义**</span>：串是由零个或多个字符组成的<span class="strong">**有限序列**</span>（线性表的特例，元素类型固定为字符）  </span><br><span class="line">🔹 <span class="strong">**关键术语**</span>：  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**子串**</span>：串中任意连续字符组成的子序列  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**主串**</span>：包含子串的原始串  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**字符位置**</span>：字符在序列中的序号（从1开始）  </span><br><span class="line"><span class="bullet">  -</span> <span class="strong">**串相等**</span>：长度相同且对应位置字符完全相同  </span><br><span class="line"></span><br><span class="line">🔸 <span class="strong">**示例对比**</span>：  </span><br><span class="line"><span class="code">```text</span></span><br><span class="line"><span class="code">主串 S = &quot;HelloWorld&quot;</span></span><br><span class="line"><span class="code">子串 T = &quot;lloWo&quot;</span></span><br><span class="line"><span class="code">空串 = &quot;&quot;</span></span><br><span class="line"><span class="code">空格串 = &quot;   &quot;（包含3个空格）</span></span><br></pre></td></tr></table></figure><hr><h2 id="🏗️-串的存储结构">🏗️ 串的存储结构</h2><h3 id="📌-顺序存储结构（定长）">📌 顺序存储结构（定长）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXLEN 255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> ch[MAXLEN];  <span class="comment">// 存储字符的数组</span></span><br><span class="line">    <span class="type">int</span> length;       <span class="comment">// 当前串长度</span></span><br><span class="line">&#125; HString;</span><br></pre></td></tr></table></figure><p>🔸 <strong>特点</strong>：</p><ul><li>预分配固定长度空间</li><li>可能截断超长字符串（需处理溢出问题）</li></ul><h3 id="📌-堆分配存储（动态扩展）">📌 堆分配存储（动态扩展）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> *ch;   <span class="comment">// 动态分配首地址</span></span><br><span class="line">    <span class="type">int</span> length; <span class="comment">// 实际长度</span></span><br><span class="line">&#125; DString;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化示例</span></span><br><span class="line">DString S;</span><br><span class="line">S.ch = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="number">100</span> * <span class="keyword">sizeof</span>(<span class="type">char</span>)); </span><br><span class="line">S.length = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>🔹 <strong>优势</strong>：可动态调整内存大小（realloc实现扩容）</p><h3 id="📌-链式存储（块链结构）">📌 链式存储（块链结构）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CHUNKSIZE 4  <span class="comment">// 每个节点存4字符</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Chunk</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> ch[CHUNKSIZE];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Chunk</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; Chunk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Chunk *head, *tail;  <span class="comment">// 头尾指针</span></span><br><span class="line">    <span class="type">int</span> curlen;          <span class="comment">// 当前总长度</span></span><br><span class="line">&#125; LString;</span><br></pre></td></tr></table></figure><p>🔸 <strong>特点</strong>：</p><ul><li>存储密度 = 实际字符数 / 总分配空间</li><li>适合超大文本存储（如小说内容）</li></ul><hr><h2 id="🔍-串的基本操作">🔍 串的基本操作</h2><h3 id="1-求串长（StrLength）">1. 求串长（StrLength）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">StrLength</span><span class="params">(DString S)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> S.length;  <span class="comment">// O(1)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-串比较（StrCompare）">2. 串比较（StrCompare）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">StrCompare</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;S.length &amp;&amp; i&lt;T.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(S.ch[i] != T.ch[i]) </span><br><span class="line">            <span class="keyword">return</span> S.ch[i]-T.ch[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> S.length - T.length; <span class="comment">// 前缀相同则比较长度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-串连接（Concat）">3. 串连接（Concat）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DString <span class="title function_">Concat</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    DString newStr;</span><br><span class="line">    newStr.ch = (<span class="type">char</span>*)<span class="built_in">malloc</span>((S.length + T.length) * <span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="comment">// 复制S的内容</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;S.length; i++) newStr.ch[i] = S.ch[i];</span><br><span class="line">    <span class="comment">// 追加T的内容</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;T.length; i++) newStr.ch[S.length+i] = T.ch[i];</span><br><span class="line">    newStr.length = S.length + T.length;</span><br><span class="line">    <span class="keyword">return</span> newStr;  <span class="comment">// 时间复杂度 O(n+m)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="⚔️-模式匹配算法">⚔️ 模式匹配算法</h2><h3 id="🛠️-BF算法（暴力匹配）">🛠️ BF算法（暴力匹配）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Index_BF</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; S.length &amp;&amp; j &lt; T.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(S.ch[i] == T.ch[j]) &#123; i++; j++; &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123; i = i - j + <span class="number">1</span>; j = <span class="number">0</span>; &#125;  <span class="comment">// i回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (j &gt;= T.length) ? (i - T.length) : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🔸 <strong>时间复杂度</strong>：O(n×m)（最坏情况）<br>🔹 <strong>示例流程</strong>：<br>主串 <code>ABABCABCAC</code>，模式串 <code>ABCAC</code><br><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230803145627.png" alt="BF算法示例"></p><hr><h3 id="🎯-KMP算法（改进版）">🎯 KMP算法（改进版）</h3><h4 id="核心思想：利用已匹配信息避免回溯">核心思想：利用已匹配信息避免回溯</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关键：构建next数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">get_next</span><span class="params">(DString T, <span class="type">int</span> next[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>;</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; T.length<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || T.ch[i]==T.ch[j]) &#123;</span><br><span class="line">            i++; j++;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KMP主算法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Index_KMP</span><span class="params">(DString S, DString T)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> next[T.length];</span><br><span class="line">    get_next(T, next);</span><br><span class="line">    <span class="keyword">while</span>(i &lt; S.length &amp;&amp; j &lt; T.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || S.ch[i]==T.ch[j]) &#123;i++; j++;&#125;</span><br><span class="line">        <span class="keyword">else</span> j = next[j];  <span class="comment">// j回退，i不回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (j &gt;= T.length) ? (i - T.length) : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🔹 <strong>性能飞跃</strong>：时间复杂度 → <strong>O(n+m)</strong><br>🔸 <strong>next数组计算示例</strong>：模式串 <code>ABCDABD</code></p><table><thead><tr><th>索引</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>字符</td><td>A</td><td>B</td><td>C</td><td>D</td><td>A</td><td>B</td><td>D</td></tr><tr><td>next</td><td>-1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>2</td></tr></tbody></table><hr><h2 id="📊-模式匹配算法对比">📊 模式匹配算法对比</h2><table><thead><tr><th>算法</th><th>时间复杂度</th><th>空间复杂度</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>BF算法</td><td>O(n×m)</td><td>O(1)</td><td>实现简单</td><td>效率低，回溯多</td></tr><tr><td>KMP算法</td><td>O(n+m)</td><td>O(m)</td><td>无回溯，效率高</td><td>需要预处理next数组</td></tr></tbody></table><hr><h2 id="🚀-实际应用场景">🚀 实际应用场景</h2><ol><li><strong>文本编辑器</strong>：快速查找/替换关键词</li><li><strong>搜索引擎</strong>：网页内容的关键词匹配</li><li><strong>生物信息</strong>：DNA序列模式匹配</li><li><strong>代码解析</strong>：XML/JSON等格式校验</li><li><strong>数据压缩</strong>：LZ77等压缩算法基于字符串匹配</li></ol><hr><h2 id="🧠-思维导图总结">🧠 思维导图总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[串] --&gt; B[基本概念]</span><br><span class="line">    A --&gt; C[存储结构]</span><br><span class="line">    A --&gt; D[基本操作]</span><br><span class="line">    A --&gt; E[模式匹配]</span><br><span class="line">    </span><br><span class="line">    B --&gt; F[空串/空格串]</span><br><span class="line">    B --&gt; G[子串/主串]</span><br><span class="line">    </span><br><span class="line">    C --&gt; H[顺序存储]</span><br><span class="line">    C --&gt; I[堆分配]</span><br><span class="line">    C --&gt; J[链式存储]</span><br><span class="line">    </span><br><span class="line">    D --&gt; K[连接]</span><br><span class="line">    D --&gt; L[比较]</span><br><span class="line">    D --&gt; M[求子串]</span><br><span class="line">    </span><br><span class="line">    E --&gt; N[BF算法]</span><br><span class="line">    E --&gt; O[KMP算法]</span><br><span class="line">    O --&gt; P[next数组]</span><br></pre></td></tr></table></figure><hr><h2 id="📜-扩展知识">📜 扩展知识</h2><h3 id="1-KMP优化：nextval数组">1. KMP优化：nextval数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">get_nextval</span><span class="params">(DString T, <span class="type">int</span> nextval[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">-1</span>;</span><br><span class="line">    nextval[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; T.length<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || T.ch[i] == T.ch[j]) &#123;</span><br><span class="line">            i++; j++;</span><br><span class="line">            <span class="comment">// 新增优化判断</span></span><br><span class="line">            <span class="keyword">if</span>(T.ch[i] != T.ch[j]) nextval[i] = j;</span><br><span class="line">            <span class="keyword">else</span> nextval[i] = nextval[j];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j = nextval[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Sunday算法">2. Sunday算法</h3><p>🔹 <strong>特点</strong>：每次失败时根据主串中下一个字符决定跳跃步数<br>🔸 <strong>优势</strong>：实际应用中比KMP更快（如grep工具）</p><hr><h2 id="⚠️-易错点提醒">⚠️ 易错点提醒</h2><ol><li><strong>数组下标处理</strong>：C语言中字符串数组从0开始，教材伪代码常从1开始</li><li><strong>KMP的next数组</strong>：不同教材定义可能不同（本例采用主流-1初始值方式）</li><li><strong>模式串为空串</strong>：需特殊处理避免运算错误</li></ol><pre><code></code></pre>]]></content>
    
    
    <summary type="html">数据结构第四章串</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="串" scheme="https://lxttz.github.io/tags/%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>数据结构第三章栈与队列</title>
    <link href="https://lxttz.github.io/posts/3740a66a.html"/>
    <id>https://lxttz.github.io/posts/3740a66a.html</id>
    <published>2025-02-28T03:05:24.000Z</published>
    <updated>2025-02-28T03:06:25.084Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🤖-Assistant">🤖 Assistant</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 🧱 第三章 栈与队列</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 🌟 基本概念</span></span><br><span class="line"><span class="section">### 🎯 什么是数据结构中的&quot;栈&quot;？</span></span><br><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">// 栈的操作特点：LIFO（Last In First Out）</span></span><br><span class="line"><span class="code">#define MaxSize 50  </span></span><br><span class="line"><span class="code">typedef struct &#123;</span></span><br><span class="line"><span class="code">    ElemType data[MaxSize];  </span></span><br><span class="line"><span class="code">    int top;  // 栈顶指针</span></span><br><span class="line"><span class="code">&#125; SqStack;</span></span><br></pre></td></tr></table></figure><p>🔹 <strong>核心规则</strong>：</p><ul><li>插入/删除只能在一端进行（栈顶）</li><li>后进入的元素先被访问（就像叠盘子）<br>🔸 <strong>关键操作</strong>：</li><li>Push（入栈） → <code>data[++top] = x</code></li><li>Pop（出栈） → <code>x = data[top--]</code><br>⚠️ 注意：空栈时top=-1（图示↓）<br><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230725110935.png" alt="栈结构示意图"></li></ul><hr><h3 id="🎯-队列是什么？">🎯 队列是什么？</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 队列的操作特点：FIFO（First In First Out）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ElemType data[MaxSize];  </span><br><span class="line">    <span class="type">int</span> front, rear;  <span class="comment">// 队头队尾指针</span></span><br><span class="line">&#125; SqQueue;</span><br></pre></td></tr></table></figure><p>🔹 <strong>基本规则</strong>：</p><ul><li>插入在队尾（rear），删除在队头（front）</li><li>先进入的元素先离开（类似排队）<br>🔸 <strong>关键操作</strong>：</li><li>入队 → <code>data[rear++] = x</code></li><li>出队 → <code>x = data[front++]</code><br>⚠️ 假溢出图示↓<br><img src="https://cdn.jsdelivr.net/gh/kevinwho/pic@main/20230725111244.png" alt="队列假溢出"></li></ul><hr><h2 id="🧱-栈的深度解析">🧱 栈的深度解析</h2><h3 id="🔧-两种实现方式对比">🔧 两种实现方式对比</h3><table><thead><tr><th>类型</th><th>存储方式</th><th>操作复杂度</th><th>典型应用场景</th></tr></thead><tbody><tr><td>顺序栈</td><td>静态数组+栈顶指针</td><td>O(1)</td><td>函数调用栈、表达式求值</td></tr><tr><td>链栈</td><td>链表+头插法</td><td>O(1)</td><td>递归转非递归</td></tr></tbody></table><h4 id="📌-栈的溢出问题">📌 栈的溢出问题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    A[栈空] --&gt;|top=-1时pop| Underflow</span><br><span class="line">    B[栈满] --&gt;|top=MaxSize-1时push| Overflow</span><br></pre></td></tr></table></figure><hr><h2 id="🚦-队列的全面剖析">🚦 队列的全面剖析</h2><h3 id="🔧-三种实现方案">🔧 三种实现方案</h3><h4 id="1-顺序队列（基础版）">1. 顺序队列（基础版）</h4><p>🔸 <strong>缺陷</strong>：产生假溢出 → 已出队的空间无法复用</p><h4 id="2-循环队列（经典解决方案）">2. 循环队列（经典解决方案）</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关键算法：</span></span><br><span class="line"><span class="comment">// 入队操作</span></span><br><span class="line">rear = (rear + <span class="number">1</span>) % MaxSize;</span><br><span class="line"><span class="comment">// 出队操作</span></span><br><span class="line">front = (front + <span class="number">1</span>) % MaxSize;</span><br></pre></td></tr></table></figure><p>🔹 <strong>判空条件</strong>：<code>front == rear</code><br>🔹 <strong>判满策略</strong>：</p><ul><li>方案一：留空一个元素 → <code>(rear+1)%MaxSize == front</code></li><li>方案二：新增size变量 → <code>size == MaxSize</code></li></ul><h4 id="3-链式队列（动态增长）">3. 链式队列（动态增长）</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LinkNode</span> &#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LinkNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; LinkNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    LinkNode *front, *rear;</span><br><span class="line">&#125; LinkQueue;</span><br></pre></td></tr></table></figure><p>🔸 优点：永不溢出（除非内存不足）</p><hr><h2 id="🎭-特殊队列">🎭 特殊队列</h2><h3 id="🔄-双端队列（Deque）">🔄 双端队列（Deque）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 支持两端操作的队列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addFirst</span><span class="params">(ElemType x)</span>;  <span class="comment">// 队头插入</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addLast</span><span class="params">(ElemType x)</span>;   <span class="comment">// 队尾插入</span></span><br><span class="line">ElemType <span class="title function_">removeFirst</span><span class="params">()</span>;     <span class="comment">// 队头删除</span></span><br><span class="line">ElemType <span class="title function_">removeLast</span><span class="params">()</span>;      <span class="comment">// 队尾删除</span></span><br></pre></td></tr></table></figure><p>🔸 <strong>应用场景</strong>：滑动窗口算法、撤销/重做功能</p><h3 id="🔝-优先级队列">🔝 优先级队列</h3><p>🔹 <strong>本质</strong>：出队顺序由元素优先级决定（常用于操作系统任务调度）</p><hr><h2 id="📊-栈与队列的终极对决">📊 栈与队列的终极对决</h2><table><thead><tr><th>特性</th><th>栈</th><th>队列</th></tr></thead><tbody><tr><td>数据进出规则</td><td>LIFO（后进先出）</td><td>FIFO（先进先出）</td></tr><tr><td>典型结构</td><td>单开口容器</td><td>双开口管道</td></tr><tr><td>核心指针</td><td>top指针</td><td>front/rear指针</td></tr><tr><td>经典应用</td><td>括号匹配/递归调用</td><td>消息队列/BFS遍历</td></tr></tbody></table><hr><h2 id="🛠️-实战应用场景">🛠️ 实战应用场景</h2><ol><li><strong>栈的典型应用</strong>：<ul><li>函数调用栈（执行上下文管理）</li><li>编辑器撤销功能（Ctrl+Z）</li><li>括号有效性检测（{[()]}判断）</li></ul></li><li><strong>队列的经典场景</strong>：<ul><li>打印机任务队列（先到先打印）</li><li>线程池任务调度（保持处理顺序）</li><li>广度优先搜索（BFS逐层遍历）</li></ul></li><li><strong>混合应用</strong>：<ul><li>用两个栈实现队列</li><li>用队列实现栈</li></ul></li></ol><hr><h2 id="🧠-思维导图">🧠 思维导图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[栈与队列] --&gt; B[栈]</span><br><span class="line">    A --&gt; C[队列]</span><br><span class="line">    </span><br><span class="line">    B --&gt; D[顺序栈]</span><br><span class="line">    B --&gt; E[链栈]</span><br><span class="line">    B --&gt; F[共享栈]</span><br><span class="line">    </span><br><span class="line">    C --&gt; G[顺序队列]</span><br><span class="line">    C --&gt; H[循环队列]</span><br><span class="line">    C --&gt; I[链式队列]</span><br><span class="line">    C --&gt; J[优先级队列]</span><br><span class="line">    </span><br><span class="line">    J --&gt; K[最大优先队列]</span><br><span class="line">    J --&gt; L[最小优先队列]</span><br></pre></td></tr></table></figure><hr><h2 id="📌-重要公式速查表">📌 重要公式速查表</h2><table><thead><tr><th>描述</th><th>计算公式</th></tr></thead><tbody><tr><td>顺序栈元素个数</td><td>top + 1</td></tr><tr><td>循环队列元素个数</td><td>(rear - front + MaxSize) % MaxSize</td></tr><tr><td>循环队列判满（方案一）</td><td>(rear + 1) % MaxSize == front</td></tr></tbody></table><pre><code></code></pre>]]></content>
    
    
    <summary type="html">数据结构第三章栈与队列</summary>
    
    
    
    <category term="数据结构" scheme="https://lxttz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="栈与队列" scheme="https://lxttz.github.io/tags/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
</feed>
